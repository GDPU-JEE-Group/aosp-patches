
./base/core/java/com/android/internal/space/api/WiFiMock.java:159:    public List<ScanResult> getScanResults(List<ScanResult> raw) {
./base/core/tests/ConnectivityManagerTest/src/com/android/connectivitymanagertest/ConnectivityManagerTestBase.java:115:                    mLastScanResult = mWifiManager.getScanResults();

./base/core/tests/bandwidthtests/src/com/android/bandwidthtest/util/ConnectionUtil.java:564:        boolean foundApInScanResults = false;
./base/core/tests/bandwidthtests/src/com/android/bandwidthtest/util/ConnectionUtil.java:566:            List<ScanResult> netList = mWifiManager.getScanResults();
./base/core/tests/bandwidthtests/src/com/android/bandwidthtest/util/ConnectionUtil.java:574:                        foundApInScanResults = true;
./base/core/tests/bandwidthtests/src/com/android/bandwidthtest/util/ConnectionUtil.java:587:            if (foundApInScanResults) {
./base/core/tests/bandwidthtests/src/com/android/bandwidthtest/util/ConnectionUtil.java:607:                        if ((mWifiManager.getScanResults() == null) ||
./base/core/tests/bandwidthtests/src/com/android/bandwidthtest/util/ConnectionUtil.java:608:                                (mWifiManager.getScanResults().size() <= 0)) {

./base/packages/CompanionDeviceManager/src/com/android/companiondevicemanager/DeviceDiscoveryService.java:488:                List<android.net.wifi.ScanResult> scanResults = mWifiManager.getScanResults();
./base/packages/SettingsLib/src/com/android/settingslib/wifi/AccessPoint.java:83: * {@link ScanResult ScanResults} along with pertinent metadata (e.g. current connection info,
./base/packages/SettingsLib/src/com/android/settingslib/wifi/AccessPoint.java:115:     * <p>This lock should be held for all modifications to {@link #mScanResults} and
./base/packages/SettingsLib/src/com/android/settingslib/wifi/AccessPoint.java:116:     * {@link #mExtraScanResults}.
./base/packages/SettingsLib/src/com/android/settingslib/wifi/AccessPoint.java:147:    private final ArraySet<ScanResult> mScanResults = new ArraySet<>();
./base/packages/SettingsLib/src/com/android/settingslib/wifi/AccessPoint.java:154:    private final ArraySet<ScanResult> mExtraScanResults = new ArraySet<>();
./base/packages/SettingsLib/src/com/android/settingslib/wifi/AccessPoint.java:300:            mScanResults.clear();
./base/packages/SettingsLib/src/com/android/settingslib/wifi/AccessPoint.java:302:                mScanResults.add((ScanResult) result);
./base/packages/SettingsLib/src/com/android/settingslib/wifi/AccessPoint.java:372:        setScanResultsPasspoint(homeScans, roamingScans);
./base/packages/SettingsLib/src/com/android/settingslib/wifi/AccessPoint.java:383:        setScanResults(results);
./base/packages/SettingsLib/src/com/android/settingslib/wifi/AccessPoint.java:389:        setScanResults(results);
./base/packages/SettingsLib/src/com/android/settingslib/wifi/AccessPoint.java:513:                builder.append(",scan cache size=").append(mScanResults.size()
./base/packages/SettingsLib/src/com/android/settingslib/wifi/AccessPoint.java:514:                        + mExtraScanResults.size());
./base/packages/SettingsLib/src/com/android/settingslib/wifi/AccessPoint.java:558:            for (ScanResult result : mScanResults) {
./base/packages/SettingsLib/src/com/android/settingslib/wifi/AccessPoint.java:647:                for (ScanResult result : mScanResults) {
./base/packages/SettingsLib/src/com/android/settingslib/wifi/AccessPoint.java:883:    public Set<ScanResult> getScanResults() {
./base/packages/SettingsLib/src/com/android/settingslib/wifi/AccessPoint.java:886:            allScans.addAll(mScanResults);
./base/packages/SettingsLib/src/com/android/settingslib/wifi/AccessPoint.java:887:            allScans.addAll(mExtraScanResults);
./base/packages/SettingsLib/src/com/android/settingslib/wifi/AccessPoint.java:913:            for (ScanResult result : mScanResults) {
./base/packages/SettingsLib/src/com/android/settingslib/wifi/AccessPoint.java:1356:                    mScanResults.toArray(new Parcelable[mScanResults.size()
./base/packages/SettingsLib/src/com/android/settingslib/wifi/AccessPoint.java:1357:                            + mExtraScanResults.size()]));
./base/packages/SettingsLib/src/com/android/settingslib/wifi/AccessPoint.java:1382:     * Sets {@link #mScanResults} to the given collection and updates info based on the best RSSI
./base/packages/SettingsLib/src/com/android/settingslib/wifi/AccessPoint.java:1387:    void setScanResults(Collection<ScanResult> scanResults) {
./base/packages/SettingsLib/src/com/android/settingslib/wifi/AccessPoint.java:1408:            mScanResults.clear();
./base/packages/SettingsLib/src/com/android/settingslib/wifi/AccessPoint.java:1409:            mScanResults.addAll(scanResults);
./base/packages/SettingsLib/src/com/android/settingslib/wifi/AccessPoint.java:1438:    void setScanResultsPasspoint(
./base/packages/SettingsLib/src/com/android/settingslib/wifi/AccessPoint.java:1442:            mExtraScanResults.clear();
./base/packages/SettingsLib/src/com/android/settingslib/wifi/AccessPoint.java:1446:                    mExtraScanResults.addAll(roamingScans);
./base/packages/SettingsLib/src/com/android/settingslib/wifi/AccessPoint.java:1448:                setScanResults(homeScans);
./base/packages/SettingsLib/src/com/android/settingslib/wifi/AccessPoint.java:1451:                setScanResults(roamingScans);
./base/packages/SettingsLib/src/com/android/settingslib/wifi/AccessPoint.java:1809:         * update of ScanResults, saved configuration state, connection state, or score
./base/packages/SettingsLib/src/com/android/settingslib/wifi/AccessPoint.java:1927:                    wifiManager.getAllMatchingWifiConfigs(wifiManager.getScanResults())) {
./base/packages/SettingsLib/src/com/android/settingslib/wifi/TestAccessPointBuilder.java:63:    private ArrayList<ScanResult> mScanResults;
./base/packages/SettingsLib/src/com/android/settingslib/wifi/TestAccessPointBuilder.java:93:        if (mScanResults != null) {
./base/packages/SettingsLib/src/com/android/settingslib/wifi/TestAccessPointBuilder.java:95:                    mScanResults.toArray(new Parcelable[mScanResults.size()]));
./base/packages/SettingsLib/src/com/android/settingslib/wifi/TestAccessPointBuilder.java:239:    public TestAccessPointBuilder setScanResults(ArrayList<ScanResult> scanResults) {
./base/packages/SettingsLib/src/com/android/settingslib/wifi/TestAccessPointBuilder.java:240:        mScanResults = scanResults;
./base/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java:133:    /** The list of AccessPoints, aggregated visible ScanResults with metadata. */
./base/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java:146:    private boolean mStaleScanResults = true;
./base/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java:280:     * <p>Sets {@link #mStaleScanResults} to true.
./base/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java:289:        mStaleScanResults = true;
./base/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java:318:        // fetch current ScanResults instead of waiting for broadcast of fresh results
./base/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java:385:     * <p>Calling this method will set the {@link #mStaleScanResults} bit, which prevents
./base/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java:398:        pauseScanning(); // and set mStaleScanResults
./base/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java:460:        // TODO(sghuman): Delete this and replace it with the Map of Ap Keys to ScanResults for
./base/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java:501:     * {@link #mStaleScanResults} is false.
./base/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java:535:        List<ScanResult> newScanResults = mWifiManager.getScanResults();
./base/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java:538:        final List<ScanResult> filteredScanResults =
./base/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java:539:                filterScanResultsByCapabilities(newScanResults);
./base/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java:542:            Log.i(TAG, "Fetched scan results: " + filteredScanResults);
./base/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java:546:        updateAccessPoints(filteredScanResults, configs);
./base/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java:550:    private void updateAccessPoints(final List<ScanResult> newScanResults,
./base/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java:562:                    updateScanResultCache(newScanResults);
./base/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java:608:            List<ScanResult> cachedScanResults = new ArrayList<>(mScanResultCache.values());
./base/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java:612:                    mWifiManager.getAllMatchingWifiConfigs(cachedScanResults), cachedAccessPoints));
./base/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java:616:                    mWifiManager.getMatchingOsuProviders(cachedScanResults), cachedAccessPoints));
./base/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java:727:            accessPoint.setScanResults(scanResults);
./base/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java:742:            accessPoint.setScanResultsPasspoint(homeScans, roamingScans);
./base/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java:755:            accessPoint.setScanResults(scanResults);
./base/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java:880:                mStaleScanResults = false;
./base/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java:905:     * <p>If Wifi is not enabled in the enabled state, {@link #mStaleScanResults} will be set to
./base/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java:929:            mStaleScanResults = true;
./base/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java:1087:     * Invokes {@link WifiListenerExecutor#onAccessPointsChanged()} iif {@link #mStaleScanResults}
./base/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java:1091:        if (mStaleScanResults) {
./base/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java:1104:    private List<ScanResult> filterScanResultsByCapabilities(List<ScanResult> scanResults) {
./base/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java:1131:                    Log.v(TAG, "filterScanResultsByCapabilities: Filtering SSID "
./base/packages/SettingsLib/src/com/android/settingslib/wifi/WifiUtils.java:117:        for (ScanResult result : accessPoint.getScanResults()) {


./base/services/core/java/com/android/server/NetworkScoreService.java:511:        private UnaryOperator<List<ScoredNetwork>> mScanResultsFilter;
./base/services/core/java/com/android/server/NetworkScoreService.java:528:            mScanResultsFilter = scanResultsFilter;
./base/services/core/java/com/android/server/NetworkScoreService.java:568:                    if (mScanResultsFilter == null) {
./base/services/core/java/com/android/server/NetworkScoreService.java:569:                        mScanResultsFilter = new ScanResultsScoreCacheFilter(
./base/services/core/java/com/android/server/NetworkScoreService.java:570:                                new ScanResultsSupplier(mContext));
./base/services/core/java/com/android/server/NetworkScoreService.java:572:                    return mScanResultsFilter.apply(scoredNetworkList);
./base/services/core/java/com/android/server/NetworkScoreService.java:605:    private static class ScanResultsSupplier implements Supplier<List<ScanResult>> {
./base/services/core/java/com/android/server/NetworkScoreService.java:608:        ScanResultsSupplier(Context context) {
./base/services/core/java/com/android/server/NetworkScoreService.java:616:                return wifiScanner.getSingleScanResults();
./base/services/core/java/com/android/server/NetworkScoreService.java:664:     *       current set of ScanResults is determined at construction time and never changed.
./base/services/core/java/com/android/server/NetworkScoreService.java:669:    static class ScanResultsScoreCacheFilter implements UnaryOperator<List<ScoredNetwork>> {
./base/services/core/java/com/android/server/NetworkScoreService.java:672:        ScanResultsScoreCacheFilter(Supplier<List<ScanResult>> resultsSupplier) {
./base/services/core/java/com/android/server/am/BatteryStatsService.java:1085:    public void noteBleScanResults(WorkSource ws, int numNewResults) {
./base/services/core/java/com/android/server/am/BatteryStatsService.java:1088:            mStats.noteBluetoothScanResultsFromSourceLocked(ws, numNewResults);
./base/services/core/java/com/android/server/display/WifiDisplayAdapter.java:465:        public void onScanResults(WifiDisplay[] availableDisplays) {
./base/services/core/java/com/android/server/display/WifiDisplayController.java:452:                    handleScanResults();
./base/services/core/java/com/android/server/display/WifiDisplayController.java:467:    private void handleScanResults() {
./base/services/core/java/com/android/server/display/WifiDisplayController.java:479:                mListener.onScanResults(displays);
./base/services/core/java/com/android/server/display/WifiDisplayController.java:1101:        void onScanResults(WifiDisplay[] availableDisplays);
./base/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:132:    @Mock private UnaryOperator<List<ScoredNetwork>> mScanResultsFilter;
./base/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:142:    private List<ScanResult> mScanResults;
./base/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:171:        populateScanResults();
./base/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:174:    private void populateScanResults() {
./base/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:175:        mScanResults = new ArrayList<>();
./base/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:176:        mScanResults.add(createScanResult(SSID, SCORED_NETWORK.networkKey.wifiKey.bssid));
./base/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:177:        mScanResults.add(createScanResult(SSID_2, SCORED_NETWORK_2.networkKey.wifiKey.bssid));
./base/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:178:        mScanResults.add(createScanResult(SSID_3, "10:10:00:00:10:10"));
./base/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:599:                        mCurrentNetworkFilter, mScanResultsFilter);
./base/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:604:        verifyZeroInteractions(mCurrentNetworkFilter, mScanResultsFilter);
./base/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:613:                NetworkKey.TYPE_WIFI, mCurrentNetworkFilter, mScanResultsFilter);
./base/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:618:        verifyZeroInteractions(mCurrentNetworkFilter, mScanResultsFilter);
./base/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:627:                NetworkKey.TYPE_WIFI, mCurrentNetworkFilter, mScanResultsFilter);
./base/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:632:        verifyZeroInteractions(mCurrentNetworkFilter, mScanResultsFilter);
./base/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:641:                NetworkKey.TYPE_WIFI, mCurrentNetworkFilter, mScanResultsFilter);
./base/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:646:        verifyZeroInteractions(mCurrentNetworkFilter, mScanResultsFilter);
./base/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:654:                NetworkKey.TYPE_WIFI, mCurrentNetworkFilter, mScanResultsFilter);
./base/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:658:        verifyZeroInteractions(mNetworkScoreCache, mCurrentNetworkFilter, mScanResultsFilter);
./base/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:668:                NetworkKey.TYPE_WIFI, mCurrentNetworkFilter, mScanResultsFilter);
./base/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:676:        verifyZeroInteractions(mScanResultsFilter);
./base/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:686:                NetworkKey.TYPE_WIFI, mCurrentNetworkFilter, mScanResultsFilter);
./base/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:690:        when(mScanResultsFilter.apply(scoredNetworkList)).thenReturn(filteredList);
./base/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:781:    public void testScanResultsScoreCacheFilter_emptyScanResults() throws Exception {
./base/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:782:        NetworkScoreService.ScanResultsScoreCacheFilter cacheFilter =
./base/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:783:                new NetworkScoreService.ScanResultsScoreCacheFilter(Collections::emptyList);
./base/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:792:    public void testScanResultsScoreCacheFilter_invalidScanResults() throws Exception {
./base/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:793:        List<ScanResult> invalidScanResults = Lists.newArrayList(
./base/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:800:        NetworkScoreService.ScanResultsScoreCacheFilter cacheFilter =
./base/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:801:                new NetworkScoreService.ScanResultsScoreCacheFilter(() -> invalidScanResults);
./base/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:810:    public void testScanResultsScoreCacheFilter_scoresFiltered() throws Exception {
./base/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:811:        NetworkScoreService.ScanResultsScoreCacheFilter cacheFilter =
./base/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:812:                new NetworkScoreService.ScanResultsScoreCacheFilter(() -> mScanResults);
./base/telephony/java/android/telephony/TelephonyManager.java:7147:                return telephony.getCellNetworkScanResults(getSubId(), getOpPackageName());
./base/tests/LocationTracker/src/com/android/locationtracker/TrackerService.java:391:                List<ScanResult> wifiScanResults = wifiManager.getScanResults();
./base/tests/LocationTracker/src/com/android/locationtracker/TrackerService.java:393:                    (wifiScanResults == null ? "0" : wifiScanResults.size());
./base/wifi/java/android/net/wifi/WifiNetworkScoreCache.java:258:            writer.println("  Network scores for latest ScanResults:");
./base/wifi/java/android/net/wifi/WifiNetworkScoreCache.java:260:            for (ScanResult scanResult : wifiManager.getScanResults()) {
./base/wifi/java/android/net/wifi/WifiScanner.java:525:    public static class ParcelableScanResults implements Parcelable {
./base/wifi/java/android/net/wifi/WifiScanner.java:529:        public ParcelableScanResults(ScanResult[] results) {
./base/wifi/java/android/net/wifi/WifiScanner.java:556:        public static final @android.annotation.NonNull Creator<ParcelableScanResults> CREATOR =
./base/wifi/java/android/net/wifi/WifiScanner.java:557:                new Creator<ParcelableScanResults>() {
./base/wifi/java/android/net/wifi/WifiScanner.java:558:                    public ParcelableScanResults createFromParcel(Parcel in) {
./base/wifi/java/android/net/wifi/WifiScanner.java:564:                        return new ParcelableScanResults(results);
./base/wifi/java/android/net/wifi/WifiScanner.java:567:                    public ParcelableScanResults[] newArray(int size) {
./base/wifi/java/android/net/wifi/WifiScanner.java:568:                        return new ParcelableScanResults[size];
./base/wifi/java/android/net/wifi/WifiScanner.java:852:    public boolean getScanResults() {
./base/wifi/java/android/net/wifi/WifiScanner.java:916:    public List<ScanResult> getSingleScanResults() {
./base/wifi/java/android/net/wifi/WifiScanner.java:923:            return Arrays.asList(((ParcelableScanResults) reply.obj).getResults());
./base/wifi/java/android/net/wifi/WifiScanner.java:1442:                            ((ParcelableScanResults) msg.obj).getResults());
./base/wifi/java/android/net/wifi/rtt/RangingRequest.java:158:                throw new IllegalArgumentException("Null list of ScanResults!");
./base/wifi/java/android/net/wifi/rtt/ResponderConfig.java:294:     * Point (AP), which can be obtained from {@link android.net.wifi.WifiManager#getScanResults()}.
./base/wifi/java/android/net/wifi/WifiManager.java:833:     * Call {@link #getScanResults()} to obtain the results.
./base/wifi/java/android/net/wifi/WifiManager.java:861:     * Call {@link #getBatchedScanResults()} to obtain the results.
./base/wifi/java/android/net/wifi/WifiManager.java:1252:                    mService.getAllMatchingFqdnsForScanResults(
./base/wifi/java/android/net/wifi/WifiManager.java:2271:     * {@code ((WifiManager) getSystemService(WIFI_SERVICE)).getScanResults()}</li>
./base/wifi/java/android/net/wifi/WifiManager.java:2309:     * the same permissions as {@link #getScanResults}. If such access is not allowed,
./base/wifi/java/android/net/wifi/WifiManager.java:2329:    public List<ScanResult> getScanResults() {
./base/wifi/java/android/net/wifi/WifiManager.java:2331:            return mService.getScanResults(mContext.getOpPackageName());
./base/wifi/java/com/android/server/wifi/BaseWifiService.java:93:    public Map<String, Map<Integer, List<ScanResult>>> getAllMatchingFqdnsForScanResults(
./base/wifi/java/com/android/server/wifi/BaseWifiService.java:172:    public List<ScanResult> getScanResults(String callingPackage) {
./base/wifi/tests/src/android/net/wifi/WifiManagerTest.java:1288:     * Check the call to getAllMatchingWifiConfigs calls getAllMatchingFqdnsForScanResults and
./base/wifi/tests/src/android/net/wifi/WifiManagerTest.java:1295:        when(mWifiService.getAllMatchingFqdnsForScanResults(any(List.class))).thenReturn(fqdns);
./base/wifi/tests/src/android/net/wifi/WifiManagerTest.java:1300:        inOrder.verify(mWifiService).getAllMatchingFqdnsForScanResults(any(List.class));
./base/wifi/tests/src/android/net/wifi/rtt/WifiRttManagerTest.java:343:     * Validate preamble selection from ScanResults.
./opt/net/wifi/service/java/com/android/server/wifi/AvailableNetworkNotifier.java:276:    public void handleScanResults(@NonNull List<ScanDetail> availableNetworks) {
./opt/net/wifi/service/java/com/android/server/wifi/ClientModeImpl.java:1682:    Map<String, Map<Integer, List<ScanResult>>> syncGetAllMatchingFqdnsForScanResults(
./opt/net/wifi/service/java/com/android/server/wifi/ClientModeImpl.java:4566:                            mPasspointManager.getAllMatchingFqdnsForScanResults(
./opt/net/wifi/service/java/com/android/server/wifi/ScanRequestProxy.java:57: * {@link WifiManager#getScanResults()} is invoked.
./opt/net/wifi/service/java/com/android/server/wifi/ScanRequestProxy.java:105:    private final List<ScanResult> mLastScanResults = new ArrayList<>();
./opt/net/wifi/service/java/com/android/server/wifi/ScanRequestProxy.java:137:                mLastScanResults.clear();
./opt/net/wifi/service/java/com/android/server/wifi/ScanRequestProxy.java:138:                mLastScanResults.addAll(Arrays.asList(scanResults));
./opt/net/wifi/service/java/com/android/server/wifi/ScanRequestProxy.java:298:        clearScanResults();
./opt/net/wifi/service/java/com/android/server/wifi/ScanRequestProxy.java:505:    public List<ScanResult> getScanResults() {
./opt/net/wifi/service/java/com/android/server/wifi/ScanRequestProxy.java:506:        return mLastScanResults;
./opt/net/wifi/service/java/com/android/server/wifi/ScanRequestProxy.java:512:    private void clearScanResults() {
./opt/net/wifi/service/java/com/android/server/wifi/ScanRequestProxy.java:513:        mLastScanResults.clear();
./opt/net/wifi/service/java/com/android/server/wifi/ScoredNetworkEvaluator.java:106:        if (!unscoredNetworks.isEmpty() && activeScorerAllowedtoSeeScanResults()) {
./opt/net/wifi/service/java/com/android/server/wifi/ScoredNetworkEvaluator.java:113:    private boolean activeScorerAllowedtoSeeScanResults() {
./opt/net/wifi/service/java/com/android/server/wifi/ScoredNetworkEvaluator.java:119:            mWifiPermissionsUtil.enforceCanAccessScanResults(packageName, uid);
./opt/net/wifi/service/java/com/android/server/wifi/WakeupController.java:79:            boolean isFullBandScanResults =
./opt/net/wifi/service/java/com/android/server/wifi/WakeupController.java:82:            if (results.length == 1 && isFullBandScanResults) {
./opt/net/wifi/service/java/com/android/server/wifi/WakeupController.java:83:                handleScanResults(filterDfsScanResults(Arrays.asList(results[0].getResults())));
./opt/net/wifi/service/java/com/android/server/wifi/WakeupController.java:246:                    filterDfsScanResults(mWifiInjector.getWifiScanner().getSingleScanResults());
./opt/net/wifi/service/java/com/android/server/wifi/WakeupController.java:300:    /** Returns a list of ScanResults with DFS channels removed. */
./opt/net/wifi/service/java/com/android/server/wifi/WakeupController.java:301:    private List<ScanResult> filterDfsScanResults(Collection<ScanResult> scanResults) {
./opt/net/wifi/service/java/com/android/server/wifi/WakeupController.java:362:    private void handleScanResults(Collection<ScanResult> scanResults) {
./opt/net/wifi/service/java/com/android/server/wifi/WakeupController.java:364:            Log.d(TAG, "Attempted to handleScanResults while not enabled");
./opt/net/wifi/service/java/com/android/server/wifi/WakeupController.java:396:     * Converts ScanResults to ScanResultMatchInfos.
./opt/net/wifi/service/java/com/android/server/wifi/WakeupEvaluator.java:24: * Evaluates ScanResults for Wifi Wake.
./opt/net/wifi/service/java/com/android/server/wifi/WakeupEvaluator.java:35:     * Searches ScanResults to find a connectable network.
./opt/net/wifi/service/java/com/android/server/wifi/WakeupEvaluator.java:37:     * <p>This method searches the given ScanResults for one that is present in the given
./opt/net/wifi/service/java/com/android/server/wifi/WakeupEvaluator.java:41:     * @param scanResults ScanResults to search
./opt/net/wifi/service/java/com/android/server/wifi/WifiConnectivityManager.java:176:    private boolean mWaitForFullBandScanResults = false;
./opt/net/wifi/service/java/com/android/server/wifi/WifiConnectivityManager.java:177:    private boolean mUseSingleRadioChainScanResults = false;
./opt/net/wifi/service/java/com/android/server/wifi/WifiConnectivityManager.java:264:    private boolean handleScanResults(List<ScanDetail> scanDetails, String listenerName) {
./opt/net/wifi/service/java/com/android/server/wifi/WifiConnectivityManager.java:283:        mWifiMetrics.countScanResults(scanDetails);
./opt/net/wifi/service/java/com/android/server/wifi/WifiConnectivityManager.java:290:                mOpenNetworkNotifier.handleScanResults(
./opt/net/wifi/service/java/com/android/server/wifi/WifiConnectivityManager.java:293:                    mCarrierNetworkNotifier.handleScanResults(
./opt/net/wifi/service/java/com/android/server/wifi/WifiConnectivityManager.java:309:        private int mNumScanResultsIgnoredDueToSingleRadioChain = 0;
./opt/net/wifi/service/java/com/android/server/wifi/WifiConnectivityManager.java:313:            mNumScanResultsIgnoredDueToSingleRadioChain = 0;
./opt/net/wifi/service/java/com/android/server/wifi/WifiConnectivityManager.java:334:                mWaitForFullBandScanResults = false;
./opt/net/wifi/service/java/com/android/server/wifi/WifiConnectivityManager.java:339:            boolean isFullBandScanResults =
./opt/net/wifi/service/java/com/android/server/wifi/WifiConnectivityManager.java:343:            if (mWaitForFullBandScanResults) {
./opt/net/wifi/service/java/com/android/server/wifi/WifiConnectivityManager.java:344:                if (!isFullBandScanResults) {
./opt/net/wifi/service/java/com/android/server/wifi/WifiConnectivityManager.java:349:                    mWaitForFullBandScanResults = false;
./opt/net/wifi/service/java/com/android/server/wifi/WifiConnectivityManager.java:354:                        isFullBandScanResults);
./opt/net/wifi/service/java/com/android/server/wifi/WifiConnectivityManager.java:356:            if (mNumScanResultsIgnoredDueToSingleRadioChain > 0) {
./opt/net/wifi/service/java/com/android/server/wifi/WifiConnectivityManager.java:358:                        + mNumScanResultsIgnoredDueToSingleRadioChain);
./opt/net/wifi/service/java/com/android/server/wifi/WifiConnectivityManager.java:360:            boolean wasConnectAttempted = handleScanResults(mScanDetails, "AllSingleScanListener");
./opt/net/wifi/service/java/com/android/server/wifi/WifiConnectivityManager.java:388:            // not received with both radio chains (if |mUseSingleRadioChainScanResults| is false).
./opt/net/wifi/service/java/com/android/server/wifi/WifiConnectivityManager.java:389:            if (!mUseSingleRadioChainScanResults
./opt/net/wifi/service/java/com/android/server/wifi/WifiConnectivityManager.java:393:                mNumScanResultsIgnoredDueToSingleRadioChain++;
./opt/net/wifi/service/java/com/android/server/wifi/WifiConnectivityManager.java:521:            wasConnectAttempted = handleScanResults(mScanDetails, "PnoScanListener");
./opt/net/wifi/service/java/com/android/server/wifi/WifiConnectivityManager.java:630:        mUseSingleRadioChainScanResults = context.getResources().getBoolean(
./opt/net/wifi/service/java/com/android/server/wifi/WifiConnectivityManager.java:1277:        mWaitForFullBandScanResults = true;
./opt/net/wifi/service/java/com/android/server/wifi/WifiConnectivityManager.java:1490:        mWaitForFullBandScanResults = false;
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:1280:            mWifiLogProto.numNonEmptyScanResults++;
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:1290:            mWifiLogProto.numEmptyScanResults++;
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:1770:    public void countScanResults(List<ScanDetail> scanDetails) {
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:1819:            mWifiLogProto.numTotalScanResults += totalResults;
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:1820:            mWifiLogProto.numOpenNetworkScanResults += openNetworks;
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:1821:            mWifiLogProto.numLegacyPersonalNetworkScanResults += personalNetworks;
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:1822:            mWifiLogProto.numLegacyEnterpriseNetworkScanResults += enterpriseNetworks;
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:1823:            mWifiLogProto.numEnhancedOpenNetworkScanResults += enhacedOpenNetworks;
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:1824:            mWifiLogProto.numWpa3PersonalNetworkScanResults += wpa3PersonalNetworks;
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:1825:            mWifiLogProto.numWpa3EnterpriseNetworkScanResults += wpa3EnterpriseNetworks;
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:1826:            mWifiLogProto.numHiddenNetworkScanResults += hiddenNetworks;
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:1827:            mWifiLogProto.numHotspot2R1NetworkScanResults += hotspot2r1Networks;
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:1828:            mWifiLogProto.numHotspot2R2NetworkScanResults += hotspot2r2Networks;
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:2296:            incrementTotalScanResults(mTotalBssidsInScanHistogram, bssids);
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:2457:                pw.println("mWifiLogProto.numNonEmptyScanResults="
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:2458:                        + mWifiLogProto.numNonEmptyScanResults);
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:2459:                pw.println("mWifiLogProto.numEmptyScanResults="
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:2460:                        + mWifiLogProto.numEmptyScanResults);
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:2598:                pw.println("mWifiLogProto.numTotalScanResults="
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:2599:                        + mWifiLogProto.numTotalScanResults);
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:2600:                pw.println("mWifiLogProto.numOpenNetworkScanResults="
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:2601:                        + mWifiLogProto.numOpenNetworkScanResults);
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:2602:                pw.println("mWifiLogProto.numLegacyPersonalNetworkScanResults="
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:2603:                        + mWifiLogProto.numLegacyPersonalNetworkScanResults);
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:2604:                pw.println("mWifiLogProto.numLegacyEnterpriseNetworkScanResults="
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:2605:                        + mWifiLogProto.numLegacyEnterpriseNetworkScanResults);
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:2606:                pw.println("mWifiLogProto.numEnhancedOpenNetworkScanResults="
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:2607:                        + mWifiLogProto.numEnhancedOpenNetworkScanResults);
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:2608:                pw.println("mWifiLogProto.numWpa3PersonalNetworkScanResults="
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:2609:                        + mWifiLogProto.numWpa3PersonalNetworkScanResults);
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:2610:                pw.println("mWifiLogProto.numWpa3EnterpriseNetworkScanResults="
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:2611:                        + mWifiLogProto.numWpa3EnterpriseNetworkScanResults);
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:2612:                pw.println("mWifiLogProto.numHiddenNetworkScanResults="
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:2613:                        + mWifiLogProto.numHiddenNetworkScanResults);
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:2614:                pw.println("mWifiLogProto.numHotspot2R1NetworkScanResults="
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:2615:                        + mWifiLogProto.numHotspot2R1NetworkScanResults);
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:2616:                pw.println("mWifiLogProto.numHotspot2R2NetworkScanResults="
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:2617:                        + mWifiLogProto.numHotspot2R2NetworkScanResults);
./opt/net/wifi/service/java/com/android/server/wifi/WifiMetrics.java:4130:    private void incrementTotalScanResults(SparseIntArray sia, int element) {
./opt/net/wifi/service/java/com/android/server/wifi/WifiNative.java:1306:    public ArrayList<ScanDetail> getScanResults(@NonNull String ifaceName) {
./opt/net/wifi/service/java/com/android/server/wifi/WifiNative.java:1307:        return mWificondControl.getScanResults(
./opt/net/wifi/service/java/com/android/server/wifi/WifiNative.java:1317:    public ArrayList<ScanDetail> getPnoScanResults(@NonNull String ifaceName) {
./opt/net/wifi/service/java/com/android/server/wifi/WifiNative.java:1318:        return mWificondControl.getScanResults(ifaceName, WificondControl.SCAN_TYPE_PNO_SCAN);
./opt/net/wifi/service/java/com/android/server/wifi/WifiNative.java:2610:    public WifiScanner.ScanData[] getBgScanResults(@NonNull String ifaceName) {
./opt/net/wifi/service/java/com/android/server/wifi/WifiNative.java:2611:        return mWifiVendorHal.getBgScanResults(ifaceName);
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkFactory.java:141:    private List<ScanResult> mActiveMatchedScanResults;
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkFactory.java:235:            if (!handleScanResultsAndTriggerConnectIfUserApprovedMatchFound(scanResults)) {
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkFactory.java:238:                sendNetworkRequestMatchCallbacksForActiveRequest(mActiveMatchedScanResults);
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkFactory.java:436:        sendNetworkRequestMatchCallbacksForActiveRequest(mActiveMatchedScanResults);
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkFactory.java:596:            ScanResult[] cachedScanResults = getFilteredCachedScanResults();
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkFactory.java:598:                Log.v(TAG, "Using cached " + cachedScanResults.length + " scan results");
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkFactory.java:600:            if (!handleScanResultsAndTriggerConnectIfUserApprovedMatchFound(cachedScanResults)) {
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkFactory.java:605:                sendNetworkRequestMatchCallbacksForActiveRequest(mActiveMatchedScanResults);
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkFactory.java:784:        networkToConnect.BSSID = findBestBssidFromActiveMatchedScanResultsForNetwork(network);
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkFactory.java:958:        mActiveMatchedScanResults = null;
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkFactory.java:989:        mActiveMatchedScanResults = null;
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkFactory.java:1120:        List<ScanResult> matchedScanResults = new ArrayList<>();
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkFactory.java:1125:                matchedScanResults.add(scanResult);
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkFactory.java:1130:                    + matchedScanResults);
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkFactory.java:1132:        return matchedScanResults;
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkFactory.java:1136:            @Nullable List<ScanResult> matchedScanResults) {
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkFactory.java:1137:        if (matchedScanResults == null || matchedScanResults.isEmpty()) return;
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkFactory.java:1145:                callback.onMatch(matchedScanResults);
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkFactory.java:1233:    private @Nullable String findBestBssidFromActiveMatchedScanResultsForNetwork(
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkFactory.java:1236:                || mActiveMatchedScanResults == null) return null;
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkFactory.java:1237:        ScanResult selectedScanResult = mActiveMatchedScanResults
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkFactory.java:1255:            findUserApprovedAccessPointForActiveRequestFromActiveMatchedScanResults() {
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkFactory.java:1257:                || mActiveMatchedScanResults == null) return null;
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkFactory.java:1262:        for (ScanResult scanResult : mActiveMatchedScanResults) {
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkFactory.java:1284:                || mActiveMatchedScanResults == null) return;
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkFactory.java:1293:        for (ScanResult scanResult : mActiveMatchedScanResults) {
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkFactory.java:1334:    private boolean handleScanResultsAndTriggerConnectIfUserApprovedMatchFound(
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkFactory.java:1336:        List<ScanResult> matchedScanResults =
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkFactory.java:1338:        if ((mActiveMatchedScanResults == null || mActiveMatchedScanResults.isEmpty())
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkFactory.java:1339:                && !matchedScanResults.isEmpty()) {
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkFactory.java:1343:                    matchedScanResults.size());
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkFactory.java:1345:        mActiveMatchedScanResults = matchedScanResults;
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkFactory.java:1350:                    findUserApprovedAccessPointForActiveRequestFromActiveMatchedScanResults();
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkFactory.java:1372:    private @NonNull ScanResult[] getFilteredCachedScanResults() {
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkFactory.java:1373:        List<ScanResult> cachedScanResults = mWifiScanner.getSingleScanResults();
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkFactory.java:1374:        if (cachedScanResults == null || cachedScanResults.isEmpty()) return new ScanResult[0];
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkFactory.java:1376:        return cachedScanResults.stream()
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkSelector.java:373:    private List<ScanDetail> filterScanResults(List<ScanDetail> scanDetails,
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkSelector.java:728:        mFilteredNetworks = filterScanResults(scanDetails, bssidBlacklist,
./opt/net/wifi/service/java/com/android/server/wifi/WifiNetworkSuggestionsManager.java:1015:            mWifiPermissionsUtil.enforceCanAccessScanResults(
./opt/net/wifi/service/java/com/android/server/wifi/WifiVendorHal.java:657:        public WifiScanner.ScanData[] latestScanResults = null;
./opt/net/wifi/service/java/com/android/server/wifi/WifiVendorHal.java:869:    public WifiScanner.ScanData[] getBgScanResults(@NonNull String ifaceName) {
./opt/net/wifi/service/java/com/android/server/wifi/WifiVendorHal.java:874:            return mScan.latestScanResults;
./opt/net/wifi/service/java/com/android/server/wifi/WifiVendorHal.java:2627:    private static ScanResult[] hidlToFrameworkScanResults(ArrayList<StaScanResult> scanResults) {
./opt/net/wifi/service/java/com/android/server/wifi/WifiVendorHal.java:2629:        ScanResult[] frameworkScanResults = new ScanResult[scanResults.size()];
./opt/net/wifi/service/java/com/android/server/wifi/WifiVendorHal.java:2632:            frameworkScanResults[i++] = hidlToFrameworkScanResult(scanResult);
./opt/net/wifi/service/java/com/android/server/wifi/WifiVendorHal.java:2634:        return frameworkScanResults;
./opt/net/wifi/service/java/com/android/server/wifi/WifiVendorHal.java:2655:            ScanResult[] frameworkScanResults = hidlToFrameworkScanResults(scanData.results);
./opt/net/wifi/service/java/com/android/server/wifi/WifiVendorHal.java:2658:                            WifiScanner.WIFI_BAND_UNSPECIFIED, frameworkScanResults);
./opt/net/wifi/service/java/com/android/server/wifi/WifiVendorHal.java:2691:        public void onBackgroundScanResults(int cmdId, ArrayList<StaScanData> scanDatas) {
./opt/net/wifi/service/java/com/android/server/wifi/WifiVendorHal.java:2692:            mVerboseLog.d("onBackgroundScanResults " + cmdId);
./opt/net/wifi/service/java/com/android/server/wifi/WifiVendorHal.java:2696:            // locally. This will then be returned to WifiScanner via getScanResults.
./opt/net/wifi/service/java/com/android/server/wifi/WifiVendorHal.java:2700:                mScan.latestScanResults = hidlToFrameworkScanDatas(cmdId, scanDatas);
./opt/net/wifi/service/java/com/android/server/wifi/WificondControl.java:568:    public ArrayList<ScanDetail> getScanResults(@NonNull String ifaceName, int scanType) {
./opt/net/wifi/service/java/com/android/server/wifi/WificondControl.java:578:                nativeResults = scannerImpl.getScanResults();
./opt/net/wifi/service/java/com/android/server/wifi/WificondControl.java:580:                nativeResults = scannerImpl.getPnoScanResults();
./opt/net/wifi/service/java/com/android/server/wifi/hotspot2/PasspointManager.java:583:     * supports encrypted IMSI is matched with one of ScanResults
./opt/net/wifi/service/java/com/android/server/wifi/hotspot2/PasspointManager.java:897:    public Map<String, Map<Integer, List<ScanResult>>> getAllMatchingFqdnsForScanResults(
./opt/net/wifi/service/java/com/android/server/wifi/hotspot2/PasspointManager.java:900:            Log.e(TAG, "Attempt to get matching config for a null ScanResults");
./opt/net/wifi/service/java/com/android/server/wifi/hotspot2/PasspointManager.java:920:                List<ScanResult> matchingScanResults = scanResultsPerNetworkType.get(type);
./opt/net/wifi/service/java/com/android/server/wifi/hotspot2/PasspointManager.java:921:                if (matchingScanResults == null) {
./opt/net/wifi/service/java/com/android/server/wifi/hotspot2/PasspointManager.java:922:                    matchingScanResults = new ArrayList<>();
./opt/net/wifi/service/java/com/android/server/wifi/hotspot2/PasspointManager.java:923:                    scanResultsPerNetworkType.put(type, matchingScanResults);
./opt/net/wifi/service/java/com/android/server/wifi/hotspot2/PasspointManager.java:925:                matchingScanResults.add(scanResult);
./opt/net/wifi/service/java/com/android/server/wifi/hotspot2/PasspointManager.java:967:                List<ScanResult> matchingScanResults = osuProviders.get(provider);
./opt/net/wifi/service/java/com/android/server/wifi/hotspot2/PasspointManager.java:968:                if (matchingScanResults == null) {
./opt/net/wifi/service/java/com/android/server/wifi/hotspot2/PasspointManager.java:969:                    matchingScanResults = new ArrayList<>();
./opt/net/wifi/service/java/com/android/server/wifi/hotspot2/PasspointManager.java:970:                    osuProviders.put(provider, matchingScanResults);
./opt/net/wifi/service/java/com/android/server/wifi/hotspot2/PasspointManager.java:972:                matchingScanResults.add(scanResult);
./opt/net/wifi/service/java/com/android/server/wifi/hotspot2/PasspointProvisioner.java:257:                List<ScanResult> scanResults = mWifiManager.getScanResults();
./opt/net/wifi/service/java/com/android/server/wifi/scanner/HalWifiScannerImpl.java:85:    public WifiScanner.ScanData getLatestSingleScanResults() {
./opt/net/wifi/service/java/com/android/server/wifi/scanner/HalWifiScannerImpl.java:86:        return mWificondScannerDelegate.getLatestSingleScanResults();
./opt/net/wifi/service/java/com/android/server/wifi/scanner/HalWifiScannerImpl.java:117:    public WifiScanner.ScanData[] getLatestBatchedScanResults(boolean flush) {
./opt/net/wifi/service/java/com/android/server/wifi/scanner/HalWifiScannerImpl.java:118:        return mWifiNative.getBgScanResults(mIfaceName);
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WifiScannerImpl.java:111:    public abstract WifiScanner.ScanData getLatestSingleScanResults();
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WifiScannerImpl.java:141:    public abstract WifiScanner.ScanData[] getLatestBatchedScanResults(boolean flush);
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WifiScanningServiceImpl.java:189:            mWifiPermissionsUtil.enforceCanAccessScanResultsForWifiScanner(
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WifiScanningServiceImpl.java:497:         * {@link WifiScanner#getScanResults()}.
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WifiScanningServiceImpl.java:514:        private final List<ScanResult> mCachedScanResults = new ArrayList<>();
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WifiScanningServiceImpl.java:606:                        msg.obj = new WifiScanner.ParcelableScanResults(
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WifiScanningServiceImpl.java:607:                            filterCachedScanResultsByAge());
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WifiScanningServiceImpl.java:621:            private ScanResult[] filterCachedScanResultsByAge() {
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WifiScanningServiceImpl.java:625:                return mCachedScanResults.stream()
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WifiScanningServiceImpl.java:642:                mCachedScanResults.clear();
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WifiScanningServiceImpl.java:767:                        reportScanResults(mScannerImpl.getLatestSingleScanResults());
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WifiScanningServiceImpl.java:1020:        void reportScanResults(ScanData results) {
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WifiScanningServiceImpl.java:1034:                logCallback("singleScanResults",  entry.clientInfo, entry.handlerId,
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WifiScanningServiceImpl.java:1044:                logCallback("singleScanResults",  entry.clientInfo, entry.handlerId,
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WifiScanningServiceImpl.java:1052:                mCachedScanResults.clear();
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WifiScanningServiceImpl.java:1053:                mCachedScanResults.addAll(Arrays.asList(results.getResults()));
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WifiScanningServiceImpl.java:1057:        List<ScanResult> getCachedScanResultsAsList() {
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WifiScanningServiceImpl.java:1058:            return mCachedScanResults;
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WifiScanningServiceImpl.java:1252:                        reportScanResults(mScannerImpl.getLatestBatchedScanResults(true));
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WifiScanningServiceImpl.java:1256:                        reportScanResults(mScannerImpl.getLatestBatchedScanResults(true));
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WifiScanningServiceImpl.java:1262:                        reportScanResults((ScanData[]) msg.obj);
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WifiScanningServiceImpl.java:1445:        private void reportScanResults(ScanData[] results) {
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WifiScanningServiceImpl.java:1466:                    logCallback("backgroundScanResults", ci, handler,
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WifiScanningServiceImpl.java:1827:            WifiScanner.ParcelableScanResults parcelableScanResults =
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WifiScanningServiceImpl.java:1828:                    new WifiScanner.ParcelableScanResults(results);
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WifiScanningServiceImpl.java:1834:                        WifiScanner.CMD_PNO_NETWORK_FOUND, 0, handler, parcelableScanResults);
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WifiScanningServiceImpl.java:2180:            List<ScanResult> scanResults = mSingleScanStateMachine.getCachedScanResultsAsList();
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WifiScanningServiceImpl.java:2182:            ScanResultUtil.dumpScanResults(pw, scanResults, nowMs);
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WificondScannerImpl.java:73:    private ArrayList<ScanDetail> mNativeScanResults;
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WificondScannerImpl.java:74:    private ArrayList<ScanDetail> mNativePnoScanResults;
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WificondScannerImpl.java:230:    public WifiScanner.ScanData getLatestSingleScanResults() {
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WificondScannerImpl.java:324:            mNativePnoScanResults = mWifiNative.getPnoScanResults(mIfaceName);
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WificondScannerImpl.java:325:            List<ScanResult> hwPnoScanResults = new ArrayList<>();
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WificondScannerImpl.java:326:            int numFilteredScanResults = 0;
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WificondScannerImpl.java:327:            for (int i = 0; i < mNativePnoScanResults.size(); ++i) {
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WificondScannerImpl.java:328:                ScanResult result = mNativePnoScanResults.get(i).getScanResult();
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WificondScannerImpl.java:331:                    hwPnoScanResults.add(result);
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WificondScannerImpl.java:333:                    numFilteredScanResults++;
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WificondScannerImpl.java:337:            if (numFilteredScanResults != 0) {
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WificondScannerImpl.java:338:                Log.d(TAG, "Filtering out " + numFilteredScanResults + " pno scan results.");
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WificondScannerImpl.java:342:                ScanResult[] pnoScanResultsArray =
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WificondScannerImpl.java:343:                        hwPnoScanResults.toArray(new ScanResult[hwPnoScanResults.size()]);
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WificondScannerImpl.java:344:                mLastPnoScanSettings.pnoScanEventHandler.onPnoNetworkFound(pnoScanResultsArray);
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WificondScannerImpl.java:376:            mNativeScanResults = mWifiNative.getScanResults(mIfaceName);
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WificondScannerImpl.java:377:            List<ScanResult> singleScanResults = new ArrayList<>();
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WificondScannerImpl.java:378:            int numFilteredScanResults = 0;
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WificondScannerImpl.java:379:            for (int i = 0; i < mNativeScanResults.size(); ++i) {
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WificondScannerImpl.java:380:                ScanResult result = mNativeScanResults.get(i).getScanResult();
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WificondScannerImpl.java:385:                        singleScanResults.add(result);
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WificondScannerImpl.java:388:                    numFilteredScanResults++;
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WificondScannerImpl.java:391:            if (numFilteredScanResults != 0) {
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WificondScannerImpl.java:392:                Log.d(TAG, "Filtering out " + numFilteredScanResults + " scan results.");
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WificondScannerImpl.java:397:                    for (ScanResult scanResult : singleScanResults) {
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WificondScannerImpl.java:403:                Collections.sort(singleScanResults, SCAN_RESULT_SORT_COMPARATOR);
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WificondScannerImpl.java:406:                        singleScanResults.toArray(new ScanResult[singleScanResults.size()]));
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WificondScannerImpl.java:417:    public WifiScanner.ScanData[] getLatestBatchedScanResults(boolean flush) {
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WificondScannerImpl.java:488:            if (mNativeScanResults != null) {
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WificondScannerImpl.java:489:                List<ScanResult> scanResults = mNativeScanResults.stream().map(r -> {
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WificondScannerImpl.java:492:                ScanResultUtil.dumpScanResults(pw, scanResults, nowMs);
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WificondScannerImpl.java:495:            if (mNativePnoScanResults != null) {
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WificondScannerImpl.java:496:                List<ScanResult> pnoScanResults = mNativePnoScanResults.stream().map(r -> {
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WificondScannerImpl.java:499:                ScanResultUtil.dumpScanResults(pw, pnoScanResults, nowMs);
./opt/net/wifi/service/java/com/android/server/wifi/util/ScanResultUtil.java:170:    public static void dumpScanResults(PrintWriter pw, List<ScanResult> scanResults, long nowMs) {
./opt/net/wifi/service/java/com/android/server/wifi/util/WifiPermissionsUtil.java:238:    public void enforceCanAccessScanResults(String pkgName, int uid) throws SecurityException {
./opt/net/wifi/service/java/com/android/server/wifi/util/WifiPermissionsUtil.java:289:    public void enforceCanAccessScanResultsForWifiScanner(
./opt/net/wifi/service/java/com/android/server/wifi/WifiServiceImpl.java:660:            mWifiPermissionsUtil.enforceCanAccessScanResults(packageName, callingUid);
./opt/net/wifi/service/java/com/android/server/wifi/WifiServiceImpl.java:1855:                mWifiPermissionsUtil.enforceCanAccessScanResults(packageName, callingUid);
./opt/net/wifi/service/java/com/android/server/wifi/WifiServiceImpl.java:1921:            mWifiPermissionsUtil.enforceCanAccessScanResults(packageName, callingUid);
./opt/net/wifi/service/java/com/android/server/wifi/WifiServiceImpl.java:1956:    public Map<String, Map<Integer, List<ScanResult>>> getAllMatchingFqdnsForScanResults(
./opt/net/wifi/service/java/com/android/server/wifi/WifiServiceImpl.java:1967:        return mClientModeImpl.syncGetAllMatchingFqdnsForScanResults(scanResults,
./opt/net/wifi/service/java/com/android/server/wifi/WifiServiceImpl.java:2242:                mWifiPermissionsUtil.enforceCanAccessScanResults(callingPackage, uid);
./opt/net/wifi/service/java/com/android/server/wifi/WifiServiceImpl.java:2274:    public List<ScanResult> getScanResults(String callingPackage) {
./opt/net/wifi/service/java/com/android/server/wifi/WifiServiceImpl.java:2279:            mLog.info("getScanResults uid=%").c(uid).flush();
./opt/net/wifi/service/java/com/android/server/wifi/WifiServiceImpl.java:2282:            mWifiPermissionsUtil.enforceCanAccessScanResults(callingPackage, uid);
./opt/net/wifi/service/java/com/android/server/wifi/WifiServiceImpl.java:2285:                scanResults.addAll(mScanRequestProxy.getScanResults());
./opt/net/wifi/service/java/com/android/server/wifi/WifiServiceImpl.java:2289:                return mMock.getScanResults(new ArrayList<ScanResult>());
./opt/net/wifi/service/java/com/android/server/wifi/WifiServiceImpl.java:2291:            return mMock.getScanResults(scanResults);
./opt/net/wifi/service/java/com/android/server/wifi/WifiServiceImpl.java:2293:            Slog.e(TAG, "Permission violation - getScanResults not allowed for uid="
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:162:    public void handleScanResults_hasCarrierNetworks_notificationDisplayed() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:163:        mNotificationController.handleScanResults(mCarrierNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:176:    public void handleScanResults_emptyList_notificationNotDisplayed() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:177:        mNotificationController.handleScanResults(new ArrayList<>());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:186:    public void handleScanResults_featureDisabled_notificationNotDisplayed() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:190:        mNotificationController.handleScanResults(new ArrayList<>());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:200:    public void handleScanResults_notificationShown_emptyList_notificationCleared() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:201:        mNotificationController.handleScanResults(mCarrierNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:209:        mNotificationController.handleScanResults(new ArrayList<>());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:219:    public void handleScanResults_notificationShown_noRecommendation_notificationCleared() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:220:        mNotificationController.handleScanResults(mCarrierNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:229:        mNotificationController.handleScanResults(mCarrierNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:239:    public void handleScanResults_notificationShown_screenOff_emptyList_notificationCleared() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:240:        mNotificationController.handleScanResults(mCarrierNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:249:        mNotificationController.handleScanResults(new ArrayList<>());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:260:        mNotificationController.handleScanResults(mCarrierNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:289:    public void screenOff_notificationNotShowing_handleScanResults_notificationNotDisplayed() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:291:        mNotificationController.handleScanResults(mCarrierNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:301:    public void screenOff_notificationShowing_handleScanResults_recommendationCanBeUpdated() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:302:        mNotificationController.handleScanResults(mCarrierNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:317:        mNotificationController.handleScanResults(mCarrierNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:332:        mNotificationController.handleScanResults(mCarrierNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:344:        mNotificationController.handleScanResults(mCarrierNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:356:        mNotificationController.handleScanResults(mCarrierNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:366:        mNotificationController.handleScanResults(mCarrierNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:387:        mNotificationController.handleScanResults(mCarrierNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:401:        mNotificationController.handleScanResults(scanResults);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:413:        mNotificationController.handleScanResults(mCarrierNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:427:        mNotificationController.handleScanResults(scanResults);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:436:        mNotificationController.handleScanResults(mCarrierNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:449:        mNotificationController.handleScanResults(mCarrierNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:465:        mNotificationController.handleScanResults(mCarrierNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:473:        mNotificationController.handleScanResults(mCarrierNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:484:        mNotificationController.handleScanResults(mCarrierNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:506:        mNotificationController.handleScanResults(mCarrierNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:535:        mNotificationController.handleScanResults(mCarrierNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:574:        mNotificationController.handleScanResults(mCarrierNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:594:        mNotificationController.handleScanResults(mCarrierNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:645:        mNotificationController.handleScanResults(mCarrierNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:682:        mNotificationController.handleScanResults(mCarrierNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:735:    private List<ScanDetail> createCarrierScanResults(String... ssids) {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:749:        List<ScanDetail> scanResults = createCarrierScanResults(TEST_SSID_1);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:760:        List<ScanDetail> scanResults = createCarrierScanResults(TEST_SSID_1, TEST_SSID_2);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/CarrierNetworkNotifierTest.java:777:        List<ScanDetail> scanResults = createCarrierScanResults(mDummyNetwork.SSID, TEST_SSID_2);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ClientModeImplTest.java:292:        ie[0] = ScanResults.generateSsidIe(sSSID);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ClientModeImplTest.java:301:    private ArrayList<ScanDetail> getMockScanResults() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ClientModeImplTest.java:302:        ScanResults sr = ScanResults.create(0, 2412, 2437, 2462, 5180, 5220, 5745, 5825);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ClientModeImplTest.java:3760:     * Verify that syncGetAllMatchingFqdnsForScanResults does not return null from a null message.
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ClientModeImplTest.java:3765:                mCmi.syncGetAllMatchingFqdnsForScanResults(null, mNullAsyncChannel));
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:161:    public void handleScanResults_hasOpenNetworks_notificationDisplayed() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:162:        mNotificationController.handleScanResults(mOpenNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:175:    public void handleScanResults_emptyList_notificationNotDisplayed() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:176:        mNotificationController.handleScanResults(new ArrayList<>());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:185:    public void handleScanResults_featureDisabled_notificationNotDisplayed() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:189:        mNotificationController.handleScanResults(new ArrayList<>());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:199:    public void handleScanResults_notificationShown_emptyList_notificationCleared() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:200:        mNotificationController.handleScanResults(mOpenNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:208:        mNotificationController.handleScanResults(new ArrayList<>());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:218:    public void handleScanResults_notificationShown_noRecommendation_notificationCleared() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:219:        mNotificationController.handleScanResults(mOpenNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:228:        mNotificationController.handleScanResults(mOpenNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:238:    public void handleScanResults_notificationShown_screenOff_emptyList_notificationCleared() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:239:        mNotificationController.handleScanResults(mOpenNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:248:        mNotificationController.handleScanResults(new ArrayList<>());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:259:        mNotificationController.handleScanResults(mOpenNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:288:    public void screenOff_notificationNotShowing_handleScanResults_notificationNotDisplayed() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:290:        mNotificationController.handleScanResults(mOpenNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:300:    public void screenOff_notificationShowing_handleScanResults_recommendationCanBeUpdated() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:301:        mNotificationController.handleScanResults(mOpenNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:316:        mNotificationController.handleScanResults(mOpenNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:331:        mNotificationController.handleScanResults(mOpenNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:343:        mNotificationController.handleScanResults(mOpenNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:355:        mNotificationController.handleScanResults(mOpenNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:365:        mNotificationController.handleScanResults(mOpenNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:384:        mNotificationController.handleScanResults(mOpenNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:398:        mNotificationController.handleScanResults(scanResults);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:410:        mNotificationController.handleScanResults(mOpenNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:424:        mNotificationController.handleScanResults(scanResults);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:433:        mNotificationController.handleScanResults(mOpenNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:446:        mNotificationController.handleScanResults(mOpenNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:461:        mNotificationController.handleScanResults(mOpenNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:469:        mNotificationController.handleScanResults(mOpenNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:480:        mNotificationController.handleScanResults(mOpenNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:502:        mNotificationController.handleScanResults(mOpenNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:531:        mNotificationController.handleScanResults(mOpenNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:570:        mNotificationController.handleScanResults(mOpenNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:590:        mNotificationController.handleScanResults(mOpenNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:640:        mNotificationController.handleScanResults(mOpenNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:677:        mNotificationController.handleScanResults(mOpenNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:729:    private List<ScanDetail> createOpenScanResults(String... ssids) {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:743:        List<ScanDetail> scanResults = createOpenScanResults(TEST_SSID_1);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:754:        List<ScanDetail> scanResults = createOpenScanResults(TEST_SSID_1, TEST_SSID_2);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/OpenNetworkNotifierTest.java:772:        List<ScanDetail> scanResults = createOpenScanResults(mDummyNetwork.SSID, TEST_SSID_2);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/SavedNetworkEvaluatorTest.java:214:    public void setCandidateScanResultsForAllSavedNetworks() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:176:        validateScanResultsFailureBroadcastSent(TEST_PACKAGE_NAME_1);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:280:        validateScanResultsAvailableBroadcastSent(true);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:283:        ScanTestUtil.assertScanResultsEquals(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:285:                mScanRequestProxy.getScanResults().stream().toArray(ScanResult[]::new));
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:300:        validateScanResultsAvailableBroadcastSent(false);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:303:        assertTrue(mScanRequestProxy.getScanResults().isEmpty());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:319:        validateScanResultsAvailableBroadcastSent(true);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:321:        ScanTestUtil.assertScanResultsEquals(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:323:                mScanRequestProxy.getScanResults().stream().toArray(ScanResult[]::new));
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:330:        validateScanResultsAvailableBroadcastSent(true);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:332:        ScanTestUtil.assertScanResultsEquals(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:334:                mScanRequestProxy.getScanResults().stream().toArray(ScanResult[]::new));
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:350:        validateScanResultsAvailableBroadcastSent(true);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:352:        ScanTestUtil.assertScanResultsEquals(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:354:                mScanRequestProxy.getScanResults().stream().toArray(ScanResult[]::new));
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:361:        validateScanResultsAvailableBroadcastSent(false);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:363:        ScanTestUtil.assertScanResultsEquals(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:365:                mScanRequestProxy.getScanResults().stream().toArray(ScanResult[]::new));
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:382:        validateScanResultsAvailableBroadcastSent(true);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:384:        ScanTestUtil.assertScanResultsEquals(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:386:                mScanRequestProxy.getScanResults().stream().toArray(ScanResult[]::new));
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:394:        validateScanResultsAvailableBroadcastSent(true);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:396:        ScanTestUtil.assertScanResultsEquals(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:398:                mScanRequestProxy.getScanResults().stream().toArray(ScanResult[]::new));
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:418:        validateScanResultsAvailableBroadcastSent(false);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:420:        assertTrue(mScanRequestProxy.getScanResults().isEmpty());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:428:        validateScanResultsAvailableBroadcastSent(true);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:430:        ScanTestUtil.assertScanResultsEquals(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:432:                mScanRequestProxy.getScanResults().stream().toArray(ScanResult[]::new));
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:451:        validateScanResultsAvailableBroadcastSent(false);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:453:        assertTrue(mScanRequestProxy.getScanResults().isEmpty());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:461:        validateScanResultsAvailableBroadcastSent(true);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:463:        ScanTestUtil.assertScanResultsEquals(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:465:                mScanRequestProxy.getScanResults().stream().toArray(ScanResult[]::new));
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:474:    public void testToggleScanStateClearsScanResults() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:486:        validateScanResultsAvailableBroadcastSent(true);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:488:        ScanTestUtil.assertScanResultsEquals(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:490:                mScanRequestProxy.getScanResults().stream().toArray(ScanResult[]::new));
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:497:        assertTrue(mScanRequestProxy.getScanResults().isEmpty());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:545:        validateScanResultsFailureBroadcastSent(TEST_PACKAGE_NAME_1);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:738:        validateScanResultsFailureBroadcastSent(TEST_PACKAGE_NAME_1);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:765:        validateScanResultsFailureBroadcastSent(TEST_PACKAGE_NAME_2);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:804:    public void testFullInternalScanResultsOverwritesPreviousResults() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:811:        validateScanResultsAvailableBroadcastSent(true);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:813:        ScanTestUtil.assertScanResultsEquals(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:815:                mScanRequestProxy.getScanResults().stream().toArray(ScanResult[]::new));
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:820:        validateScanResultsAvailableBroadcastSent(true);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:822:        ScanTestUtil.assertScanResultsEquals(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:824:                mScanRequestProxy.getScanResults().stream().toArray(ScanResult[]::new));
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:834:    public void testPartialInternalScanResultsDoesNotOverwritePreviousResults() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:841:        validateScanResultsAvailableBroadcastSent(true);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:843:        ScanTestUtil.assertScanResultsEquals(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:845:                mScanRequestProxy.getScanResults().stream().toArray(ScanResult[]::new));
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:854:        ScanTestUtil.assertScanResultsEquals(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:856:                mScanRequestProxy.getScanResults().stream().toArray(ScanResult[]::new));
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:904:    private void validateScanResultsAvailableBroadcastSent(boolean expectScanSuceeded) {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanRequestProxyTest.java:919:    private void validateScanResultsFailureBroadcastSent(String expectedPackageName) {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanResultMatchInfoTest.java:53:     * Tests that multiple ScanResults with different BSSIDs will produce equivalent
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanResultMatchInfoTest.java:57:    public void testDifferentBssidScanResultsMatch() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanResultMatchInfoTest.java:72:    public void testDifferentNetworkScanResultsDontMatch() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanResults.java:37:public class ScanResults {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanResults.java:41:    private final ScanResult[] mScanResults;
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanResults.java:43:    private ScanResults(ArrayList<ScanDetail> scanDetails, ScanData scanData,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanResults.java:48:        mScanResults = scanResults;
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanResults.java:52:     * Merge the results contained in a number of ScanResults into a single ScanResults
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanResults.java:54:    public static ScanResults merge(int bandScanned, ScanResults... others) {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanResults.java:57:        ArrayList<ScanResult> rawScanResults = new ArrayList<>();
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanResults.java:58:        for (ScanResults other : others) {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanResults.java:61:            rawScanResults.addAll(Arrays.asList(other.getRawScanResults()));
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanResults.java:65:        return new ScanResults(scanDetails, new ScanData(id, 0, 0, bandScanned, scanDataResults
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanResults.java:67:                rawScanResults.toArray(new ScanResult[rawScanResults.size()]));
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanResults.java:137:     * Create a ScanResults with randomly generated results seeded by the id.
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanResults.java:140:    public static ScanResults create(int id, int bandScanned, int... freqs) {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanResults.java:144:    public static ScanResults create(int id, int bandScanned,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanResults.java:146:        return new ScanResults(id, bandScanned, -1, nativeResults);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanResults.java:154:    public static ScanResults createOverflowing(int id, int bandScanned, int maxResults,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanResults.java:156:        return new ScanResults(id, bandScanned, maxResults, nativeResults);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanResults.java:159:    private ScanResults(int id, int bandScanned, int maxResults, ScanDetail... nativeResults) {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanResults.java:160:        mScanResults = new ScanResult[nativeResults.length];
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanResults.java:163:            mScanResults[i] = nativeResults[i].getScanResult();
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanResults.java:165:        ScanResult[] sortedScanResults = Arrays.copyOf(mScanResults, mScanResults.length);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanResults.java:166:        Arrays.sort(sortedScanResults, SCAN_RESULT_RSSI_COMPARATOR);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanResults.java:167:        mRawScanData = new ScanData(id, 0, 0, bandScanned, sortedScanResults);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanResults.java:171:            ScanResult[] reducedScanResults = Arrays.copyOf(sortedScanResults,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanResults.java:172:                    Math.min(sortedScanResults.length, maxResults));
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanResults.java:173:            mScanData = new ScanData(id, 0, 0, bandScanned, reducedScanResults);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanResults.java:185:    public ScanResult[] getRawScanResults() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanResults.java:186:        return mScanResults;
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanTestUtil.java:306:    private static void assertScanResultsEquals(String prefix, ScanResult[] expected,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanTestUtil.java:308:        assertNotNull(prefix + "expected ScanResults was null", expected);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanTestUtil.java:309:        assertNotNull(prefix + "actual ScanResults was null", actual);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanTestUtil.java:328:    public static void assertScanResultsEquals(ScanResult[] expected, ScanResult[] actual) {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanTestUtil.java:329:        assertScanResultsEquals("", expected, actual);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScanTestUtil.java:339:        assertScanResultsEquals(prefix, expected.getResults(), actual.getResults());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScoredNetworkEvaluatorTest.java:230:    public void testUpdate_externalScorerNotPermittedToSeeScanResults() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScoredNetworkEvaluatorTest.java:238:        doThrow(new SecurityException()).when(mWifiPermissionsUtil).enforceCanAccessScanResults(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScoredNetworkEvaluatorTest.java:248:        verify(mWifiPermissionsUtil).enforceCanAccessScanResults(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScoredNetworkEvaluatorTest.java:253:    public void testUpdate_externalScorerNotPermittedToSeeScanResultsWithException() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScoredNetworkEvaluatorTest.java:261:        doThrow(new SecurityException()).when(mWifiPermissionsUtil).enforceCanAccessScanResults(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/ScoredNetworkEvaluatorTest.java:271:        verify(mWifiPermissionsUtil).enforceCanAccessScanResults(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/TestUtil.java:60:    public static void sendScanResultsAvailable(BroadcastReceiver broadcastReceiver,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WakeupControllerTest.java:323:     * Verify that the wakeup lock is initialized with the intersection of ScanResults and saved
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WakeupControllerTest.java:327:    public void startInitializesWakeupLockWithSavedScanResults() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WakeupControllerTest.java:344:        when(mWifiScanner.getSingleScanResults())
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WakeupControllerTest.java:358:     * Verify that the wakeup lock is initialized with the intersection of ScanResults and network
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WakeupControllerTest.java:382:        when(mWifiScanner.getSingleScanResults())
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WakeupControllerTest.java:396:     * Verify that the wakeup lock is initialized with the intersection of ScanResults and saved
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WakeupControllerTest.java:400:    public void startInitializesWakeupLockWithSavedScanResultsAndNetworkSuggestions() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WakeupControllerTest.java:424:        when(mWifiScanner.getSingleScanResults())
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WakeupControllerTest.java:444:    public void startFiltersOutDfsScanResults() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WakeupControllerTest.java:463:        when(mWifiScanner.getSingleScanResults())
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WakeupControllerTest.java:560:    public void onResultsFiltersOutDfsScanResults() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WakeupControllerTest.java:715:        when(mWifiScanner.getSingleScanResults()).thenReturn(Collections.emptyList());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WakeupControllerTest.java:741:        when(mWifiScanner.getSingleScanResults()).thenReturn(Collections.emptyList());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiConfigManagerTest.java:2696:    public void testFetchChannelSetForNetworkIgnoresStaleScanResults() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiConnectivityManagerTest.java:652:    public void wifiDisconnected_noConnectionCandidate_openNetworkNotifierScanResultsHandled() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiConnectivityManagerTest.java:671:        verify(mOpenNetworkNotifier).handleScanResults(expectedOpenNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiConnectivityManagerTest.java:765:    public void wifiDisconnected_noConnectionCandidate_CarrierNetworkNotifierScanResultsHandled() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiConnectivityManagerTest.java:784:        verify(mCarrierNetworkNotifier).handleScanResults(expectedCarrierNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiConnectivityManagerTest.java:794:    public void whenNoEncryptionInfoAvailable_CarrierNetworkNotifierDoesNotHandleScanResults() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiConnectivityManagerTest.java:814:        verify(mCarrierNetworkNotifier, never()).handleScanResults(expectedCarrierNetworks);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiConnectivityManagerTest.java:1427:    public void listenToAllSingleScanResults() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiConnectivityManagerTest.java:1449:    public void waitForFullBandScanResults() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiConnectivityManagerTest.java:1545:    public void verifyBlacklistRefreshedAfterScanResults() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiConnectivityManagerTest.java:2019:    public void filterScanResultsWithOneRadioChainInfoForNetworkSelectionIfConfigDisabled() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiConnectivityManagerTest.java:2050:        List<ScanResult> capturedScanResults =
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiConnectivityManagerTest.java:2054:        assertEquals(3, capturedScanResults.size());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiConnectivityManagerTest.java:2055:        assertTrue(capturedScanResults.contains(mScanData.getResults()[0]));
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiConnectivityManagerTest.java:2056:        assertTrue(capturedScanResults.contains(mScanData.getResults()[1]));
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiConnectivityManagerTest.java:2057:        assertFalse(capturedScanResults.contains(mScanData.getResults()[2]));
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiConnectivityManagerTest.java:2058:        assertTrue(capturedScanResults.contains(mScanData.getResults()[3]));
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiConnectivityManagerTest.java:2075:    public void dontFilterScanResultsWithOneRadioChainInfoForNetworkSelectionIfConfigEnabled() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiConnectivityManagerTest.java:2106:        List<ScanResult> capturedScanResults =
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiConnectivityManagerTest.java:2110:        assertEquals(4, capturedScanResults.size());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiConnectivityManagerTest.java:2111:        assertTrue(capturedScanResults.contains(mScanData.getResults()[0]));
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiConnectivityManagerTest.java:2112:        assertTrue(capturedScanResults.contains(mScanData.getResults()[1]));
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiConnectivityManagerTest.java:2113:        assertTrue(capturedScanResults.contains(mScanData.getResults()[2]));
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiConnectivityManagerTest.java:2114:        assertTrue(capturedScanResults.contains(mScanData.getResults()[3]));
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiLastResortWatchdogTest.java:198:    public void testAvailableNetworkBuffering_emptyBufferWithEmptyScanResults() throws Exception {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiMetricsTest.java:685:            mWifiMetrics.countScanResults(mockScanDetails);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiMetricsTest.java:982:        assertEquals("mDecodedProto.numEmptyScanResults == NUM_EMPTY_SCAN_RESULTS",
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiMetricsTest.java:983:                NUM_EMPTY_SCAN_RESULTS, mDecodedProto.numEmptyScanResults);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiMetricsTest.java:984:        assertEquals("mDecodedProto.numNonEmptyScanResults == NUM_NON_EMPTY_SCAN_RESULTS",
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiMetricsTest.java:985:                NUM_NON_EMPTY_SCAN_RESULTS, mDecodedProto.numNonEmptyScanResults);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiMetricsTest.java:1049:                mDecodedProto.numTotalScanResults);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiMetricsTest.java:1051:                mDecodedProto.numOpenNetworkScanResults);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiMetricsTest.java:1053:                mDecodedProto.numLegacyPersonalNetworkScanResults);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiMetricsTest.java:1055:                mDecodedProto.numLegacyEnterpriseNetworkScanResults);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiMetricsTest.java:1057:                mDecodedProto.numEnhancedOpenNetworkScanResults);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiMetricsTest.java:1059:                mDecodedProto.numWpa3PersonalNetworkScanResults);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiMetricsTest.java:1061:                mDecodedProto.numWpa3EnterpriseNetworkScanResults);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiMetricsTest.java:1063:                mDecodedProto.numHiddenNetworkScanResults);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiMetricsTest.java:1065:                mDecodedProto.numHotspot2R1NetworkScanResults);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiMetricsTest.java:1067:                mDecodedProto.numHotspot2R2NetworkScanResults);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiMonitorTest.java:302:    public void testBroadcastPnoScanResultsEvent() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiMonitorTest.java:317:    public void testBroadcastScanResultsEvent() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:190:        when(mWifiScanner.getSingleScanResults()).thenReturn(Collections.emptyList());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:735:        ArgumentCaptor<List<ScanResult>> matchedScanResultsCaptor =
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:737:        verify(mNetworkRequestMatchCallback).onMatch(matchedScanResultsCaptor.capture());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:739:        assertNotNull(matchedScanResultsCaptor.getValue());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:741:        validateScanResults(matchedScanResultsCaptor.getValue(), mTestScanDatas[0].getResults()[0]);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:744:                matchedScanResultsCaptor.getValue().size());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:778:        ArgumentCaptor<List<ScanResult>> matchedScanResultsCaptor =
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:780:        verify(mNetworkRequestMatchCallback).onMatch(matchedScanResultsCaptor.capture());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:782:        assertNotNull(matchedScanResultsCaptor.getValue());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:784:        validateScanResults(matchedScanResultsCaptor.getValue(),
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:788:                matchedScanResultsCaptor.getValue().size());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:822:        ArgumentCaptor<List<ScanResult>> matchedScanResultsCaptor =
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:824:        verify(mNetworkRequestMatchCallback).onMatch(matchedScanResultsCaptor.capture());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:826:        assertNotNull(matchedScanResultsCaptor.getValue());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:828:        validateScanResults(matchedScanResultsCaptor.getValue(), mTestScanDatas[0].getResults()[0]);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:831:                matchedScanResultsCaptor.getValue().size());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:866:        ArgumentCaptor<List<ScanResult>> matchedScanResultsCaptor =
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:868:        verify(mNetworkRequestMatchCallback).onMatch(matchedScanResultsCaptor.capture());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:870:        assertNotNull(matchedScanResultsCaptor.getValue());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:872:        validateScanResults(matchedScanResultsCaptor.getValue(),
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:876:                matchedScanResultsCaptor.getValue().size());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:911:        ArgumentCaptor<List<ScanResult>> matchedScanResultsCaptor =
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:913:        verify(mNetworkRequestMatchCallback).onMatch(matchedScanResultsCaptor.capture());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:915:        assertNotNull(matchedScanResultsCaptor.getValue());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:917:        validateScanResults(matchedScanResultsCaptor.getValue(),
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:922:                matchedScanResultsCaptor.getValue().size());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:1681:        verify(mWifiScanner, times(2)).getSingleScanResults();
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:1723:        verify(mWifiScanner, times(2)).getSingleScanResults();
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:1758:        verify(mWifiScanner, times(2)).getSingleScanResults();
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:1798:        verify(mWifiScanner, times(2)).getSingleScanResults();
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2166:        ArgumentCaptor<List<ScanResult>> matchedScanResultsCaptor =
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2169:        matchedScanResultsCaptor = ArgumentCaptor.forClass(List.class);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2170:        verify(mNetworkRequestMatchCallback).onMatch(matchedScanResultsCaptor.capture());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2171:        assertNotNull(matchedScanResultsCaptor.getValue());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2172:        validateScanResults(matchedScanResultsCaptor.getValue(), matchingScanResult);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2207:        ArgumentCaptor<List<ScanResult>> matchedScanResultsCaptor =
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2210:        matchedScanResultsCaptor = ArgumentCaptor.forClass(List.class);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2211:        verify(mNetworkRequestMatchCallback).onMatch(matchedScanResultsCaptor.capture());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2212:        assertNotNull(matchedScanResultsCaptor.getValue());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2213:        validateScanResults(matchedScanResultsCaptor.getValue(), matchingScanResult);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2246:        ArgumentCaptor<List<ScanResult>> matchedScanResultsCaptor =
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2249:        matchedScanResultsCaptor = ArgumentCaptor.forClass(List.class);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2250:        verify(mNetworkRequestMatchCallback).onMatch(matchedScanResultsCaptor.capture());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2251:        assertNotNull(matchedScanResultsCaptor.getValue());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2252:        validateScanResults(matchedScanResultsCaptor.getValue(), matchingScanResult);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2289:        ArgumentCaptor<List<ScanResult>> matchedScanResultsCaptor =
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2292:        matchedScanResultsCaptor = ArgumentCaptor.forClass(List.class);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2293:        verify(mNetworkRequestMatchCallback).onMatch(matchedScanResultsCaptor.capture());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2294:        assertNotNull(matchedScanResultsCaptor.getValue());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2295:        validateScanResults(matchedScanResultsCaptor.getValue(), matchingScanResult);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2331:        ArgumentCaptor<List<ScanResult>> matchedScanResultsCaptor =
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2334:        matchedScanResultsCaptor = ArgumentCaptor.forClass(List.class);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2335:        verify(mNetworkRequestMatchCallback).onMatch(matchedScanResultsCaptor.capture());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2336:        assertNotNull(matchedScanResultsCaptor.getValue());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2337:        validateScanResults(matchedScanResultsCaptor.getValue(), matchingScanResult);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2458:        when(mWifiScanner.getSingleScanResults())
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2513:        when(mWifiScanner.getSingleScanResults())
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2581:        ArgumentCaptor<List<ScanResult>> matchedScanResultsCaptor =
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2583:        verify(mNetworkRequestMatchCallback).onMatch(matchedScanResultsCaptor.capture());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2585:        assertNotNull(matchedScanResultsCaptor.getValue());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2587:        validateScanResults(matchedScanResultsCaptor.getValue(), mTestScanDatas[0].getResults()[0]);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2590:                matchedScanResultsCaptor.getValue().size());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2688:        mInOrder.verify(mWifiScanner).getSingleScanResults();
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2789:    private void validateScanResults(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2790:            List<ScanResult> actualScanResults, ScanResult...expectedScanResults) {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2791:        assertEquals(expectedScanResults.length, actualScanResults.size());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2792:        for (int i = 0; i < expectedScanResults.length; i++) {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2793:            ScanResult expectedScanResult = expectedScanResults[i];
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkFactoryTest.java:2794:            ScanResult actualScanResult = actualScanResults.stream()
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkSelectorTest.java:270:    public void emptyScanResults() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkSelectorTest.java:621:    public void noSelectionWhenCurrentNetworkNotInScanResults() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkSuggestionsManagerTest.java:877:                .enforceCanAccessScanResults(TEST_PACKAGE_1, TEST_UID_1);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkSuggestionsManagerTest.java:910:        mInorder.verify(mWifiPermissionsUtil, never()).enforceCanAccessScanResults(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkSuggestionsManagerTest.java:962:                    .enforceCanAccessScanResults(packageNameCaptor.capture(), uidCaptor.capture());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkSuggestionsManagerTest.java:1024:                    .enforceCanAccessScanResults(packageNameCaptor.capture(), uidCaptor.capture());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkSuggestionsManagerTest.java:1087:                    .enforceCanAccessScanResults(packageNameCaptor.capture(), uidCaptor.capture());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkSuggestionsManagerTest.java:1132:        mInorder.verify(mWifiPermissionsUtil, never()).enforceCanAccessScanResults(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkSuggestionsManagerTest.java:1166:        mInorder.verify(mWifiPermissionsUtil, never()).enforceCanAccessScanResults(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkSuggestionsManagerTest.java:1195:                .when(mWifiPermissionsUtil).enforceCanAccessScanResults(TEST_PACKAGE_1, TEST_UID_1);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiNetworkSuggestionsManagerTest.java:1203:                .enforceCanAccessScanResults(TEST_PACKAGE_1, TEST_UID_1);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiServiceImplTest.java:1269:    public void testStartScanFailureInCanAccessScanResultsPermission() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiServiceImplTest.java:1272:                .enforceCanAccessScanResults(SCAN_PACKAGE_NAME, Process.myUid());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiServiceImplTest.java:1322:        doThrow(new SecurityException()).when(mWifiPermissionsUtil).enforceCanAccessScanResults(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiServiceImplTest.java:1334:     * appropriate permissions, when enforceCanAccessScanResults raises a SecurityException.
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiServiceImplTest.java:1340:        doThrow(new SecurityException()).when(mWifiPermissionsUtil).enforceCanAccessScanResults(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiServiceImplTest.java:1386:     * appropriate permissions, when enforceCanAccessScanResults raises a SecurityException.
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiServiceImplTest.java:1393:        doThrow(new SecurityException()).when(mWifiPermissionsUtil).enforceCanAccessScanResults(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiServiceImplTest.java:1436:        doThrow(new SecurityException()).when(mWifiPermissionsUtil).enforceCanAccessScanResults(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiServiceImplTest.java:1447:     * appropriate permissions, when enforceCanAccessScanResults raises a SecurityException.
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiServiceImplTest.java:1454:        doThrow(new SecurityException()).when(mWifiPermissionsUtil).enforceCanAccessScanResults(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiServiceImplTest.java:1486:    public void testGetScanResults() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiServiceImplTest.java:1494:        when(mScanRequestProxy.getScanResults()).thenReturn(scanResultList);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiServiceImplTest.java:1497:        List<ScanResult> retrievedScanResultList = mWifiServiceImpl.getScanResults(packageName);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiServiceImplTest.java:1498:        verify(mScanRequestProxy).getScanResults();
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiServiceImplTest.java:1500:        ScanTestUtil.assertScanResultsEquals(scanResults,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiServiceImplTest.java:1508:    public void testGetScanResultsFailureInRunWithScissors() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiServiceImplTest.java:1518:        when(mScanRequestProxy.getScanResults()).thenReturn(scanResultList);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiServiceImplTest.java:1521:        List<ScanResult> retrievedScanResultList = mWifiServiceImpl.getScanResults(packageName);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiServiceImplTest.java:1522:        verify(mScanRequestProxy, never()).getScanResults();
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiServiceImplTest.java:2684:     * Verify that the call to getAllMatchingFqdnsForScanResults is not redirected to specific API
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiServiceImplTest.java:2685:     * syncGetAllMatchingFqdnsForScanResults when the caller doesn't have NETWORK_SETTINGS
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiServiceImplTest.java:2689:    public void testGetAllMatchingFqdnsForScanResultsWithoutPermissions() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiServiceImplTest.java:2690:        mWifiServiceImpl.getAllMatchingFqdnsForScanResults(new ArrayList<>());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiVendorHalTest.java:2109:    public void testBgScanFullScanResults() throws Exception {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiVendorHalTest.java:2130:    public void testBgScanScanResults() throws Exception {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiVendorHalTest.java:2139:        mIWifiStaIfaceEventCallback.onBackgroundScanResults(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiVendorHalTest.java:2144:                data.second, Arrays.asList(mWifiVendorHal.mScan.latestScanResults));
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiVendorHalTest.java:3362:    private void assertScanResultsEqual(ScanResult[] expected, ScanResult[] actual) {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WifiVendorHalTest.java:3373:        assertScanResultsEqual(expected.getResults(), actual.getResults());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:575:     * Verifies that getScanResults() returns null when there is no configured client
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:579:    public void testGetScanResultsErrorWhenNoClientInterfaceConfigured() throws Exception {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:591:        // getScanResults should fail.
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:593:                mWificondControl.getScanResults(TEST_INTERFACE_NAME,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:598:     * Verifies that getScanResults() can parse NativeScanResult from wificond correctly,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:601:    public void testGetScanResults() throws Exception {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:605:        NativeScanResult[] mockScanResults = {MOCK_NATIVE_SCAN_RESULT};
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:606:        when(mWifiScannerImpl.getScanResults()).thenReturn(mockScanResults);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:608:        ArrayList<ScanDetail> returnedScanResults = mWificondControl.getScanResults(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:614:        assertEquals(mockScanResults.length, returnedScanResults.size());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:617:        for (int i = 0; i < mockScanResults.length; i++) {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:618:            assertArrayEquals(mockScanResults[i].ssid,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:619:                              returnedScanResults.get(i).getScanResult().SSID.getBytes());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:620:            assertEquals(mockScanResults[i].frequency,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:621:                         returnedScanResults.get(i).getScanResult().frequency);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:622:            assertEquals(mockScanResults[i].tsf,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:623:                         returnedScanResults.get(i).getScanResult().timestamp);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:635:    public void testGetScanResultsForCarrierAp() throws Exception {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:644:        when(mWifiScannerImpl.getScanResults()).thenReturn(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:656:        ArrayList<ScanDetail> returnedScanResults = mWificondControl.getScanResults(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:658:        assertEquals(1, returnedScanResults.size());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:660:        ScanResult scanResult = returnedScanResults.get(0).getScanResult();
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:670:        returnedScanResults = mWificondControl.getScanResults(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:672:        assertEquals(1, returnedScanResults.size());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:674:        scanResult = returnedScanResults.get(0).getScanResult();
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:682:     * Verifies that getScanResults() can parse NativeScanResult from wificond correctly,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:686:    public void testGetScanResultsWithRadioChainInfo() throws Exception {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:697:        NativeScanResult[] mockScanResults = { nativeScanResult };
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:699:        when(mWifiScannerImpl.getScanResults()).thenReturn(mockScanResults);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:701:        ArrayList<ScanDetail> returnedScanResults = mWificondControl.getScanResults(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:707:        assertEquals(mockScanResults.length, returnedScanResults.size());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:710:        for (int i = 0; i < mockScanResults.length; i++) {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:711:            assertArrayEquals(mockScanResults[i].ssid,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:712:                    returnedScanResults.get(i).getScanResult().SSID.getBytes());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:713:            assertEquals(mockScanResults[i].frequency,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:714:                    returnedScanResults.get(i).getScanResult().frequency);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:715:            assertEquals(mockScanResults[i].tsf,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:716:                    returnedScanResults.get(i).getScanResult().timestamp);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/WificondControlTest.java:718:                    returnedScanResults.get(i).getScanResult().radioChainInfos);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/hotspot2/PasspointManagerTest.java:365:    private List<ScanResult> createTestScanResults() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/hotspot2/PasspointManagerTest.java:846:    public void getAllMatchingFqdnsForScanResults() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/hotspot2/PasspointManagerTest.java:881:                    mManager.getAllMatchingFqdnsForScanResults(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/hotspot2/PasspointManagerTest.java:882:                            createTestScanResults());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/hotspot2/PasspointManagerTest.java:930:    public void getAllMatchingFqdnsForScanResultsWithNullScanResult() throws Exception {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/hotspot2/PasspointManagerTest.java:931:        assertEquals(0, mManager.getAllMatchingFqdnsForScanResults(null).size());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/hotspot2/PasspointManagerTest.java:939:    public void getAllMatchingFqdnsForScanResultsWithNullBSSID() throws Exception {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/hotspot2/PasspointManagerTest.java:944:                mManager.getAllMatchingFqdnsForScanResults(Arrays.asList(scanResult)).size());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/hotspot2/PasspointManagerTest.java:952:    public void ggetAllMatchingFqdnsForScanResultsWithInvalidBSSID() throws Exception {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/hotspot2/PasspointManagerTest.java:957:                mManager.getAllMatchingFqdnsForScanResults(Arrays.asList(scanResult)).size());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/hotspot2/PasspointManagerTest.java:965:    public void getAllMatchingFqdnsForScanResultsForNonPasspointAP() throws Exception {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/hotspot2/PasspointManagerTest.java:969:                mManager.getAllMatchingFqdnsForScanResults(Arrays.asList(scanResult)).size());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/hotspot2/PasspointManagerTest.java:1103:                    createTestScanResults()).keySet(), expectedOsuProvidersForDomainId2);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/hotspot2/PasspointProvisionerTest.java:456:        when(mWifiManager.getScanResults()).thenReturn(null);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/hotspot2/PasspointProvisionerTest.java:496:        when(mWifiManager.getScanResults()).thenReturn(scanResults);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/BaseWifiScannerImplTest.java:41:import com.android.server.wifi.ScanResults;
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/BaseWifiScannerImplTest.java:123:                ScanResults.create(0, WifiScanner.WIFI_BAND_24_GHZ,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/BaseWifiScannerImplTest.java:137:                ScanResults.create(0, WifiScanner.WIFI_BAND_UNSPECIFIED,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/BaseWifiScannerImplTest.java:152:                ScanResults.create(0, WifiScanner.WIFI_BAND_UNSPECIFIED,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/BaseWifiScannerImplTest.java:169:                ScanResults.create(0, WifiScanner.WIFI_BAND_24_GHZ,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/BaseWifiScannerImplTest.java:193:                ScanResults.create(0, WifiScanner.WIFI_BAND_UNSPECIFIED,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/BaseWifiScannerImplTest.java:222:                ScanResults.create(0, WifiScanner.WIFI_BAND_UNSPECIFIED,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/BaseWifiScannerImplTest.java:389:                ScanResults.create(0, WifiScanner.WIFI_BAND_24_GHZ,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/BaseWifiScannerImplTest.java:398:                ScanResults.create(0, WifiScanner.WIFI_BAND_BOTH_WITH_DFS,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/BaseWifiScannerImplTest.java:441:        Collections.sort(scanDataResults, ScanResults.SCAN_RESULT_RSSI_COMPARATOR);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/BaseWifiScannerImplTest.java:461:        when(mWifiNative.getScanResults(eq(IFACE_NAME))).thenReturn(rawResults);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/BaseWifiScannerImplTest.java:473:        assertScanDataEquals(scanData, mScanner.getLatestSingleScanResults());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/BaseWifiScannerImplTest.java:499:            Set<Integer> expectedScan, List<String> expectedHiddenNetSSIDs, ScanResults results,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/BaseWifiScannerImplTest.java:519:            List<String> expectedHiddenNetSSIDs, ScanResults results, boolean expectFullResults) {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/BaseWifiScannerImplTest.java:523:        when(mWifiNative.getScanResults(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/BaseWifiScannerImplTest.java:532:            for (ScanResult result : results.getRawScanResults()) {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/BaseWifiScannerImplTest.java:538:        assertScanDataEquals(results.getScanData(), mScanner.getLatestSingleScanResults());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:25:import static com.android.server.wifi.ScanTestUtil.assertScanResultsEquals;
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:81:import com.android.server.wifi.ScanResults;
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:236:    private static void verifyScanResultsReceived(InOrder order, Handler handler, int listenerId,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:240:        assertScanResultsMessage(listenerId, expected, scanResultMessage);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:243:    private static void assertScanResultsMessage(int listenerId, WifiScanner.ScanData[] expected,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:315:    private static void verifyMultipleSingleScanResults(InOrder handlerOrder, Handler handler,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:316:            int requestId1, ScanResults results1, int requestId2, ScanResults results2,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:317:            int listenerRequestId, ScanResults listenerResults) {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:325:            assertScanResultsMessage(requestId2,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:329:            assertScanResultsMessage(requestId1,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:334:                assertScanResultsMessage(listenerRequestId,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:339:            assertScanResultsMessage(requestId1,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:343:            assertScanResultsMessage(requestId2,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:348:                assertScanResultsMessage(listenerRequestId,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:355:    private static void verifyMultipleSingleScanResults(InOrder handlerOrder, Handler handler,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:356:            int requestId1, ScanResults results1, int requestId2, ScanResults results2) {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:357:        verifyMultipleSingleScanResults(handlerOrder, handler, requestId1, results1, requestId2,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:595:            WifiNative.ScanSettings nativeSettings, ScanResults results) throws RemoteException {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:615:        when(mWifiScannerImpl.getLatestSingleScanResults())
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:620:        verifyScanResultsReceived(order, handler, requestId, results.getScanData());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:625:        assertDumpContainsCallbackLog("singleScanResults", requestId,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:637:                ScanResults.create(0, WifiScanner.WIFI_BAND_BOTH_WITH_DFS, 2400, 5150, 5175));
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:648:                ScanResults.create(0, WifiScanner.WIFI_BAND_UNSPECIFIED, 2400, 5150, 5175));
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:660:                ScanResults.create(0, WifiScanner.WIFI_BAND_UNSPECIFIED, 2400, 5150, 5175));
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:671:                ScanResults.create(0, WifiScanner.WIFI_BAND_BOTH, new int[0]));
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:684:        ScanResults results = ScanResults.createOverflowing(0, WifiScanner.WIFI_BAND_24_GHZ, 0,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:685:                ScanResults.generateNativeResults(0, 5150, 5171));
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:848:                ScanResults.create(0, 2400, 5150, 5175));
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1094:        ScanResults results1 = ScanResults.create(0, WifiScanner.WIFI_BAND_UNSPECIFIED, 2400);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1100:        ScanResults results2 = ScanResults.create(0, WifiScanner.WIFI_BAND_UNSPECIFIED, 2450);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1122:        when(mWifiScannerImpl.getLatestSingleScanResults())
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1128:        // the source code of WifiScanningServiceImpl WifiSingleScanStateMachine.reportScanResults.
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1129:        // This is due to the fact that verifyScanResultsReceived and
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1131:        // is created in reportScanResults.  This handling is done in the two verify*Received calls
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1132:        // that is run AFTER the reportScanResults method in WifiScanningServiceImpl completes.
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1133:        verifyScanResultsReceived(order, handler, requestId1, results1.getScanData());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1145:        when(mWifiScannerImpl.getLatestSingleScanResults())
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1150:        verifyScanResultsReceived(order, handler, requestId2, results2.getScanData());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1163:        ScanResults results1 = ScanResults.create(0, WifiScanner.WIFI_BAND_UNSPECIFIED, 2400);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1168:        ScanResults results2 = ScanResults.create(0, WifiScanner.WIFI_BAND_UNSPECIFIED, 2450);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1196:        when(mWifiScannerImpl.getLatestSingleScanResults())
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1201:        verifyScanResultsReceived(handlerOrder, handler, requestId1, results1.getScanData());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1209:        when(mWifiScannerImpl.getLatestSingleScanResults())
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1214:        verifyScanResultsReceived(handlerOrder, handler, requestId2, results2.getScanData());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1233:        ScanResults results1 = ScanResults.create(0, WifiScanner.WIFI_BAND_UNSPECIFIED, 2400);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1239:        ScanResults results2 = ScanResults.create(0, WifiScanner.WIFI_BAND_UNSPECIFIED, 2400);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1266:        when(mWifiScannerImpl.getLatestSingleScanResults())
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1271:        verifyScanResultsReceived(handlerOrder, handler, requestId1, results1.getScanData());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1279:        when(mWifiScannerImpl.getLatestSingleScanResults())
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1284:        verifyScanResultsReceived(handlerOrder, handler, requestId2, results2.getScanData());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1303:        ScanResults results1 = ScanResults.create(0, WifiScanner.WIFI_BAND_UNSPECIFIED, 2400);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1310:        ScanResults results2 =
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1311:                ScanResults.create(0, WifiScanner.WIFI_BAND_UNSPECIFIED, 2450, 5175, 2450);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1321:        ScanResults results3 =
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1322:                ScanResults.create(0, WifiScanner.WIFI_BAND_UNSPECIFIED, 5150, 5150, 5150, 5150);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1327:        ScanResults results2and3 =
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1328:                ScanResults.merge(WifiScanner.WIFI_BAND_UNSPECIFIED, results2, results3);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1367:        when(mWifiScannerImpl.getLatestSingleScanResults())
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1372:        verifyScanResultsReceived(handlerOrder, handler, requestId1, results1.getScanData());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1382:        when(mWifiScannerImpl.getLatestSingleScanResults())
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1388:        verifyMultipleSingleScanResults(handlerOrder, handler, requestId2, results2, requestId3,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1398:        assertDumpContainsCallbackLog("singleScanResults", requestId1,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1399:                "results=" + results1.getRawScanResults().length);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1400:        assertDumpContainsCallbackLog("singleScanResults", requestId2,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1401:                "results=" + results2.getRawScanResults().length);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1402:        assertDumpContainsCallbackLog("singleScanResults", requestId3,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1403:                "results=" + results3.getRawScanResults().length);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1415:        ScanResults results24GHz =
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1416:                ScanResults.create(0, WifiScanner.WIFI_BAND_BOTH, 2400, 2400, 2400, 2450);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1417:        ScanResults results5GHz =
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1418:                ScanResults.create(0, WifiScanner.WIFI_BAND_BOTH, 5150, 5150, 5175);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1419:        ScanResults resultsBoth =
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1420:                ScanResults.merge(WifiScanner.WIFI_BAND_BOTH, results24GHz, results5GHz);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1426:        ScanResults results1 = resultsBoth;
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1432:        ScanResults results2 = results24GHz;
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1460:        when(mWifiScannerImpl.getLatestSingleScanResults())
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1465:        verifyMultipleSingleScanResults(handlerOrder, handler, requestId1, results1, requestId2,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1483:        ScanResults results2400 =
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1484:                ScanResults.create(0, WifiScanner.WIFI_BAND_UNSPECIFIED, 2400, 2400, 2400);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1485:        ScanResults results2450 = ScanResults.create(0, WifiScanner.WIFI_BAND_UNSPECIFIED, 2450);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1486:        ScanResults results1and3 =
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1487:                ScanResults.merge(WifiScanner.WIFI_BAND_UNSPECIFIED, results2400, results2450);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1494:        ScanResults results1 = results1and3;
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1501:        ScanResults results2 = ScanResults.create(0, 2450, 5175, 2450);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1508:        ScanResults results3 = results2400;
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1543:        when(mWifiScannerImpl.getLatestSingleScanResults())
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1548:        verifyMultipleSingleScanResults(handlerOrder, handler, requestId1, results1, requestId3,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1559:        when(mWifiScannerImpl.getLatestSingleScanResults())
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1565:        verifyScanResultsReceived(handlerOrder, handler, requestId2, results2.getScanData());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1575:        assertDumpContainsCallbackLog("singleScanResults", requestId1,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1576:                "results=" + results1.getRawScanResults().length);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1577:        assertDumpContainsCallbackLog("singleScanResults", requestId2,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1578:                "results=" + results2.getRawScanResults().length);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1579:        assertDumpContainsCallbackLog("singleScanResults", requestId3,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1580:                "results=" + results3.getRawScanResults().length);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1587:    public void retrieveSingleScanResults() throws Exception {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1591:        ScanResults expectedResults =
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1592:                ScanResults.create(0, WifiScanner.WIFI_BAND_BOTH_WITH_DFS, 2400, 5150, 5175);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1605:                ((WifiScanner.ParcelableScanResults) response.obj).getResults());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1606:        assertEquals(results.size(), expectedResults.getRawScanResults().length);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1620:    public void retrieveSingleScanResultsEmpty() throws Exception {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1624:                ScanResults.create(0, WifiScanner.WIFI_BAND_BOTH, new int[0]));
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1636:                ((WifiScanner.ParcelableScanResults) response.obj).getResults());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1645:    public void retrieveSingleScanResultsBeforeAnySingleScans() throws Exception {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1658:                ((WifiScanner.ParcelableScanResults) response.obj).getResults());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1663:     * Verify that the newest full scan results are returned by WifiService.getSingleScanResults.
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1666:    public void retrieveMostRecentFullSingleScanResults() throws Exception {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1669:        ScanResults expectedResults = ScanResults.create(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1685:                ((WifiScanner.ParcelableScanResults) response.obj).getResults());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1686:        assertEquals(results.size(), expectedResults.getRawScanResults().length);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1690:        ScanResults expectedSingleResult = ScanResults.create(0, WifiScanner.WIFI_BAND_BOTH, 5150);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1699:        when(mWifiScannerImpl.getLatestSingleScanResults())
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1704:        verifyScanResultsReceived(order, handler, secondScanRequestId,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1714:                ((WifiScanner.ParcelableScanResults) response2.obj).getResults());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1715:        assertEquals(results2.size(), expectedSingleResult.getRawScanResults().length);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1720:     * WifiService.getSingleScanResults.
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1723:    public void doesNotRetrieveMostRecentPartialSingleScanResults() throws Exception {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1726:        ScanResults expectedFullResults =
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1727:                ScanResults.create(0, WifiScanner.WIFI_BAND_BOTH, 2400, 5150, 5175);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1742:                ((WifiScanner.ParcelableScanResults) response.obj).getResults());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1743:        assertEquals(results.size(), expectedFullResults.getRawScanResults().length);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1749:        ScanResults expectedPartialResults =
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1750:                ScanResults.create(0, WifiScanner.WIFI_BAND_5_GHZ, 5150);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1759:        when(mWifiScannerImpl.getLatestSingleScanResults())
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1764:        verifyScanResultsReceived(order, handler, secondScanRequestId,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1774:                ((WifiScanner.ParcelableScanResults) response2.obj).getResults());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1775:        assertEquals(results2.size(), expectedFullResults.getRawScanResults().length);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1779:     * Verify that the scan results returned by WifiService.getSingleScanResults are not older
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1784:    public void doesNotRetrieveStaleScanResultsFromLastFullSingleScan() throws Exception {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1787:        ScanResults scanResults =
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1788:                ScanResults.create(0, WifiScanner.WIFI_BAND_BOTH, 2400, 5150, 5175);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1794:        scanResults.getRawScanResults()[0].timestamp = (currentTimeInMillis - 1) * 1000;
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1795:        scanResults.getRawScanResults()[1].timestamp = (currentTimeInMillis - 2) * 1000;
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1796:        scanResults.getRawScanResults()[2].timestamp =
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1799:                add(scanResults.getRawScanResults()[0]);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1800:                add(scanResults.getRawScanResults()[1]);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1816:                ((WifiScanner.ParcelableScanResults) response.obj).getResults());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1817:        assertScanResultsEquals(expectedResults.toArray(new ScanResult[expectedResults.size()]),
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1825:    public void validateScanResultsClearedAfterDriverUnloaded() throws Exception {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1829:        ScanResults expectedResults = ScanResults.create(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1843:                ((WifiScanner.ParcelableScanResults) response.obj).getResults());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1844:        assertEquals(results.size(), expectedResults.getRawScanResults().length);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1855:                ((WifiScanner.ParcelableScanResults) response2.obj).getResults());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1867:        ScanResults results = ScanResults.create(0, 2400, 5150, 5175);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1892:        when(mWifiScannerImpl.getLatestSingleScanResults())
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1897:        verifyScanResultsReceived(order, handler, requestId, results.getScanData());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1899:        verifyScanResultsReceived(order, handler, listenerRequestId, results.getScanData());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1903:        assertDumpContainsCallbackLog("singleScanResults", listenerRequestId,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1915:        ScanResults results = ScanResults.create(0, 2400, 5150, 5175);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1943:        when(mWifiScannerImpl.getLatestSingleScanResults())
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1948:        verifyScanResultsReceived(order, handler, requestId, results.getScanData());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1965:        ScanResults results1 = ScanResults.create(0, WifiScanner.WIFI_BAND_UNSPECIFIED, 2400);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1970:        ScanResults results2 =
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1971:                ScanResults.create(0, WifiScanner.WIFI_BAND_UNSPECIFIED, 2450, 5175, 2450);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1976:        ScanResults results3 =
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1977:                ScanResults.create(0, WifiScanner.WIFI_BAND_UNSPECIFIED, 5150, 5150, 5150, 5150);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1981:        ScanResults results2and3 =
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:1982:                ScanResults.merge(WifiScanner.WIFI_BAND_UNSPECIFIED, results2, results3);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2023:        when(mWifiScannerImpl.getLatestSingleScanResults())
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2028:        verifyScanResultsReceived(handlerOrder, handler, requestId1, results1.getScanData());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2030:        verifyScanResultsReceived(handlerOrder, handler, listenerRequestId, results1.getScanData());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2037:        when(mWifiScannerImpl.getLatestSingleScanResults())
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2043:        verifyMultipleSingleScanResults(handlerOrder, handler, requestId2, results2, requestId3,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2047:        assertDumpContainsCallbackLog("singleScanResults", listenerRequestId,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2048:                "results=" + results1.getRawScanResults().length);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2049:        assertDumpContainsCallbackLog("singleScanResults", listenerRequestId,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2050:                "results=" + results2and3.getRawScanResults().length);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2140:            ScanResults results)
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2144:                new WifiScanner.PnoSettings.PnoNetwork[results.getRawScanResults().length];
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2146:        for (ScanResult scanResult : results.getRawScanResults()) {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2172:    private ScanResults createScanResultsForPno() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2173:        return ScanResults.create(0, 2400, 5150, 5175);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2203:        assertScanResultsEquals(expected,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2204:                ((WifiScanner.ParcelableScanResults) networkFoundMessage.obj).getResults());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2215:            WifiNative.ScanSettings nativeSettings, ScanResults results) {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2222:        for (ScanResult fullScanResult : results.getRawScanResults()) {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2225:        when(mWifiScannerImpl.getLatestBatchedScanResults(anyBoolean())).thenReturn(scanDatas);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2231:            WifiNative.PnoSettings nativeSettings, ScanResults results) {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2239:        eventHandler.onPnoNetworkFound(results.getRawScanResults());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2256:        ScanResults scanResults = createScanResultsForPno();
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2264:        verifyPnoNetworkFoundReceived(order, handler, requestId, scanResults.getRawScanResults());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2279:        ScanResults scanResults = createScanResultsForPno();
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2343:        ScanResults results = ScanResults.create(0, WifiScanner.WIFI_BAND_BOTH, 2400);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2344:        when(mWifiScannerImpl.getLatestSingleScanResults())
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2357:        verifyScanResultsReceived(order, handler, requestId, results.getScanData());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2373:        verifyScanResultsReceived(order, handler, requestId, results.getScanData());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2427:        ScanResults results =
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2428:                ScanResults.create(0, WifiScanner.WIFI_BAND_UNSPECIFIED, 2400, 5150, 5175);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2441:        when(mWifiScannerImpl.getLatestSingleScanResults())
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2446:        verifyScanResultsReceived(order, handler, requestId, results.getScanData());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2451:        assertDumpContainsCallbackLog("singleScanResults", requestId,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2475:        ScanResults scanResults = createScanResultsForPno();
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2483:        verifyPnoNetworkFoundReceived(order, handler, requestId, scanResults.getRawScanResults());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2546:                .enforceCanAccessScanResultsForWifiScanner(any(), eq(Binder.getCallingUid()),
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2614:        verify(mWifiPermissionsUtil).enforceCanAccessScanResultsForWifiScanner(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2627:        verify(mWifiPermissionsUtil).enforceCanAccessScanResultsForWifiScanner(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2640:        verify(mWifiPermissionsUtil).enforceCanAccessScanResultsForWifiScanner(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2674:        verify(mWifiPermissionsUtil).enforceCanAccessScanResultsForWifiScanner(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2687:        verify(mWifiPermissionsUtil).enforceCanAccessScanResultsForWifiScanner(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2700:        verify(mWifiPermissionsUtil).enforceCanAccessScanResultsForWifiScanner(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2706:     * enforceCanAccessScanResultsForWifiScanner(String, int, boolean, boolean)} for requests
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WifiScanningServiceTest.java:2737:        verify(mWifiPermissionsUtil, never()).enforceCanAccessScanResultsForWifiScanner(
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WificondPnoScannerTest.java:37:import com.android.server.wifi.ScanResults;
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WificondPnoScannerTest.java:98:        ScanResults scanResults = createDummyScanResults();
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WificondPnoScannerTest.java:133:        ScanResults scanResults = createDummyScanResults();
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WificondPnoScannerTest.java:172:    private ScanResults createDummyScanResults() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WificondPnoScannerTest.java:173:        return ScanResults.create(0, WifiScanner.WIFI_BAND_UNSPECIFIED,  2400, 2450, 2450, 2400,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WificondPnoScannerTest.java:211:            ScanResults scanResults) {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WificondPnoScannerTest.java:215:        when(mWifiNative.getPnoScanResults(IFACE_NAME))
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WificondPnoScannerTest.java:217:        when(mWifiNative.getScanResults(IFACE_NAME))
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WificondPnoScannerTest.java:224:        order.verify(eventHandler).onPnoNetworkFound(scanResults.getRawScanResults());
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WificondScannerTest.java:31:import com.android.server.wifi.ScanResults;
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WificondScannerTest.java:98:    public void externalScanResultsDoNotCauseSpuriousTimerCancellationOrCrash() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WificondScannerTest.java:110:    public void externalScanResultsAfterOurScanDoNotCauseSpuriousTimerCancellationOrCrash() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WificondScannerTest.java:121:                ScanResults.create(0, WifiScanner.WIFI_BAND_24_GHZ,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WificondScannerTest.java:135:    public void lateScanResultsDoNotCauseSpuriousTimerCancellationOrCrash() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/scanner/WificondScannerTest.java:169:    public void dumpContainsNativeScanResults() {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:195:        codeUnderTest.enforceCanAccessScanResults(TEST_PACKAGE_NAME, mUid);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:218:        codeUnderTest.enforceCanAccessScanResults(TEST_PACKAGE_NAME, mUid);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:235:            codeUnderTest.enforceCanAccessScanResults(TEST_PACKAGE_NAME, mUid);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:252:    public void testenforceCanAccessScanResults_UserOrProfileNotCurrent() throws Exception {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:262:        codeUnderTest.enforceCanAccessScanResults(TEST_PACKAGE_NAME, mUid);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:274:    public void testCannotAccessScanResults_NoInteractAcrossUsersFullPermission() throws Exception {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:283:            codeUnderTest.enforceCanAccessScanResults(TEST_PACKAGE_NAME, mUid);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:308:            codeUnderTest.enforceCanAccessScanResults(TEST_PACKAGE_NAME, mUid);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:335:        codeUnderTest.enforceCanAccessScanResults(TEST_PACKAGE_NAME, mUid);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:349:    public void testCannotAccessScanResults_NoCoarseLocationPermission() throws Exception {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:356:            codeUnderTest.enforceCanAccessScanResults(TEST_PACKAGE_NAME, mUid);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:372:    public void testCannotAccessScanResults_LocationModeDisabled() throws Exception {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:386:            codeUnderTest.enforceCanAccessScanResults(TEST_PACKAGE_NAME, mUid);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:404:    public void testEnforceCannotAccessScanResults_LocationModeDisabledHasChangeWifiState()
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:420:            codeUnderTest.enforceCanAccessScanResults(TEST_PACKAGE_NAME, mUid);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:439:    public void testEnforceCannotAccessScanResults_LocationModeDisabledHasAccessWifiState()
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:455:            codeUnderTest.enforceCanAccessScanResults(TEST_PACKAGE_NAME, mUid);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:474:    public void testEnforceCannotAccessScanResults_LocationModeDisabledHasNoNetworkSettings()
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:491:            codeUnderTest.enforceCanAccessScanResults(TEST_PACKAGE_NAME, mUid);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:510:    public void testEnforceCanAccessScanResults_LocationModeDisabledHasNetworkSettings()
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:526:        codeUnderTest.enforceCanAccessScanResults(TEST_PACKAGE_NAME, mUid);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:542:    public void testEnforceCannotAccessScanResults_LocationModeDisabledHasNoNetworkSetupWizard()
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:559:            codeUnderTest.enforceCanAccessScanResults(TEST_PACKAGE_NAME, mUid);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:578:    public void testEnforceCanAccessScanResults_LocationModeDisabledHasNetworkSetupWizard()
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:594:        codeUnderTest.enforceCanAccessScanResults(TEST_PACKAGE_NAME, mUid);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:610:    public void testEnforceCanAccessScanResults_LocationModeDisabledHasNetworkManagedProvisioning()
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:626:        codeUnderTest.enforceCanAccessScanResults(TEST_PACKAGE_NAME, mUid);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:642:    public void testEnforceCanAccessScanResults_LocationModeDisabledHasNetworkStack()
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:658:        codeUnderTest.enforceCanAccessScanResults(TEST_PACKAGE_NAME, mUid);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:674:    public void testEnforceCanAccessScanResults_LocationModeDisabledHasMainlineNetworkStack()
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:690:        codeUnderTest.enforceCanAccessScanResults(TEST_PACKAGE_NAME, mUid);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:703:            codeUnderTest.enforceCanAccessScanResults(TEST_PACKAGE_NAME, mUid);
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:888:    public void testCanAccessScanResultsForWifiScanner() throws Exception {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:899:        codeUnderTest.enforceCanAccessScanResultsForWifiScanner(TEST_PACKAGE_NAME, mUid,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:916:    public void testCannotAccessScanResultsForWifiScanner_HideFromAppOps()
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:928:        codeUnderTest.enforceCanAccessScanResultsForWifiScanner(TEST_PACKAGE_NAME, mUid,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:946:    public void testCannotAccessScanResultsForWifiScanner_NoFineLocationPermission()
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:959:            codeUnderTest.enforceCanAccessScanResultsForWifiScanner(TEST_PACKAGE_NAME, mUid,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:975:    public void testCannotAccessScanResultsForWifiScanner_NoFineLocationAppOps() throws Exception {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:987:            codeUnderTest.enforceCanAccessScanResultsForWifiScanner(TEST_PACKAGE_NAME, mUid,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:1003:    public void testCannotAccessScanResultsForWifiScanner_NoHardwareLocationPermission()
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:1016:            codeUnderTest.enforceCanAccessScanResultsForWifiScanner(TEST_PACKAGE_NAME, mUid,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:1032:    public void testCannotAccessScanResultsForWifiScanner_NoWifiScanAppOps() throws Exception {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:1044:            codeUnderTest.enforceCanAccessScanResultsForWifiScanner(TEST_PACKAGE_NAME, mUid,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:1060:    public void testCannotAccessScanResultsForWifiScanner_LocationModeDisabled() throws Exception {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:1072:            codeUnderTest.enforceCanAccessScanResultsForWifiScanner(TEST_PACKAGE_NAME, mUid,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:1088:    public void testCannotAccessScanResultsForWifiScanner_IgnoreLocationSettings()
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:1100:        codeUnderTest.enforceCanAccessScanResultsForWifiScanner(TEST_PACKAGE_NAME, mUid,
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:1113:    public void testCannotAccessScanResultsForWifiScanner_InvalidPackage() throws Exception {
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/util/WifiPermissionsUtilTest.java:1125:            codeUnderTest.enforceCanAccessScanResultsForWifiScanner(TEST_PACKAGE_NAME, mUid,



































./base/packages/SettingsLib/src/com/android/settingslib/wifi/TestAccessPointBuilder.java:239:    public TestAccessPointBuilder setScanResults(ArrayList<ScanResult> scanResults) {
./base/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java:720:            List<ScanResult> scanResults,
./base/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java:749:            List<ScanResult> scanResults,
./base/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java:1104:    private List<ScanResult> filterScanResultsByCapabilities(List<ScanResult> scanResults) {
./base/packages/SettingsLib/tests/integ/src/com/android/settingslib/wifi/AccessPointTest.java:630:        ArrayList<ScanResult> scanResults = new ArrayList<>();
./base/packages/SettingsLib/tests/integ/src/com/android/settingslib/wifi/AccessPointTest.java:1074:        ArrayList<ScanResult> scanResults = new ArrayList<>();
./base/packages/SettingsLib/tests/robotests/src/com/android/settingslib/wifi/WifiUtilsTest.java:80:        ArrayList<ScanResult> scanResults = buildScanResultCache();
./base/packages/SettingsLib/tests/robotests/src/com/android/settingslib/wifi/WifiUtilsTest.java:152:        ArrayList<ScanResult> scanResults = new ArrayList<>();
./base/services/core/java/com/android/server/NetworkScoreService.java:673:            List<ScanResult> scanResults = resultsSupplier.get();
./base/services/core/java/com/android/server/pm/PackageManagerService.java:10904:        final List<ScanResult> scanResults = new ArrayList<>(1 + childCount);
./base/services/core/java/com/android/server/pm/PackageManagerService.java:17224:                    final List<ScanResult> scanResults = scanPackageTracedLI(
./base/wifi/java/android/net/wifi/BatchedScanResult.java:41:    public final List<ScanResult> scanResults = new ArrayList<ScanResult>();
./base/wifi/java/android/net/wifi/WifiManager.java:1248:            @NonNull List<ScanResult> scanResults) {
./base/wifi/java/android/net/wifi/WifiManager.java:1291:            @Nullable List<ScanResult> scanResults) {
./base/wifi/java/android/net/wifi/WifiManager.java:1477:        void onMatch(@NonNull List<ScanResult> scanResults);
./base/wifi/java/android/net/wifi/WifiManager.java:1576:        public void onMatch(List<ScanResult> scanResults) {
./base/wifi/java/com/android/server/wifi/BaseWifiService.java:94:            List<ScanResult> scanResults) {
./base/wifi/java/com/android/server/wifi/BaseWifiService.java:100:            List<ScanResult> scanResults) {
./base/wifi/tests/src/android/net/wifi/rtt/WifiRttManagerTest.java:137:        List<ScanResult> scanResults2and3 = new ArrayList<>(2);
./opt/net/wifi/service/java/com/android/server/wifi/ClientModeImpl.java:1683:            List<ScanResult> scanResults,
./opt/net/wifi/service/java/com/android/server/wifi/ClientModeImpl.java:1705:            List<ScanResult> scanResults,
./opt/net/wifi/service/java/com/android/server/wifi/WakeupController.java:245:            List<ScanResult> scanResults =
./opt/net/wifi/service/java/com/android/server/wifi/hotspot2/PasspointManager.java:898:            List<ScanResult> scanResults) {
./opt/net/wifi/service/java/com/android/server/wifi/hotspot2/PasspointManager.java:942:            List<ScanResult> scanResults) {
./opt/net/wifi/service/java/com/android/server/wifi/hotspot2/PasspointProvisioner.java:257:                List<ScanResult> scanResults = mWifiManager.getScanResults();
./opt/net/wifi/service/java/com/android/server/wifi/hotspot2/PasspointProvisioner.java:987:                List<ScanResult> scanResults,
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WifiScanningServiceImpl.java:2180:            List<ScanResult> scanResults = mSingleScanStateMachine.getCachedScanResultsAsList();
./opt/net/wifi/service/java/com/android/server/wifi/scanner/WificondScannerImpl.java:489:                List<ScanResult> scanResults = mNativeScanResults.stream().map(r -> {
./opt/net/wifi/service/java/com/android/server/wifi/util/ScanResultUtil.java:170:    public static void dumpScanResults(PrintWriter pw, List<ScanResult> scanResults, long nowMs) {
./opt/net/wifi/service/java/com/android/server/wifi/WifiServiceImpl.java:1957:            List<ScanResult> scanResults) {
./opt/net/wifi/service/java/com/android/server/wifi/WifiServiceImpl.java:1979:            List<ScanResult> scanResults) {
./opt/net/wifi/service/java/com/android/server/wifi/WifiServiceImpl.java:2283:            final List<ScanResult> scanResults = new ArrayList<>();
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/hotspot2/PasspointManagerTest.java:366:        List<ScanResult> scanResults = new ArrayList<>();
./opt/net/wifi/tests/wifitests/src/com/android/server/wifi/hotspot2/PasspointProvisionerTest.java:470:        List<ScanResult> scanResults = new ArrayList<>();


