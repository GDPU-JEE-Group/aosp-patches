diff --git a/frameworks/base/services/core/java/com/android/server/StorageManagerService.java b/frameworks/base/services/core/java/com/android/server/StorageManagerService.java
index 3e7851af4f..3e0f20d940 100644
--- a/frameworks/base/services/core/java/com/android/server/StorageManagerService.java
+++ b/frameworks/base/services/core/java/com/android/server/StorageManagerService.java
@@ -1811,13 +1811,23 @@ class StorageManagerService extends IStorageManager.Stub
         mount(vol);
     }
 
-    private void mount(VolumeInfo vol) {
-        try {
-            mVold.mount(vol.id, vol.mountFlags, vol.mountUserId);
-        } catch (Exception e) {
-            Slog.wtf(TAG, e);
+private void mount(VolumeInfo vol) {
+    try {
+        // Slog.w("cx", "vol.id: " + vol.id);
+        // Slog.w("cx", "vol.mountFlags: " + vol.mountFlags);
+        // Slog.w("cx", "vol.mountUserId: " + vol.mountUserId);
+        if ("vol.id: public:259,1".equals("vol.id: " + vol.id)) {
+            Slog.w("cx", "----------------vol.id: public:259,1--------------");
+            return;
         }
+        mVold.mount(vol.id, vol.mountFlags, vol.mountUserId);
+    } catch (Exception e) {
+        Slog.wtf(TAG, e);
+        Slog.w(TAG, "---vol.id: " + vol.id);
+        Slog.w(TAG, "---vol.mountFlags: " + vol.mountFlags);
+        Slog.w(TAG, "---vol.mountUserId: " + vol.mountUserId);
     }
+}
 
     @Override
     public void unmount(String volId) {
diff --git a/packages/apps/Settings/src/com/android/settings/deviceinfo/StorageSettings.java b/packages/apps/Settings/src/com/android/settings/deviceinfo/StorageSettings.java
index e791168de0..b7e012f6ee 100644
--- a/packages/apps/Settings/src/com/android/settings/deviceinfo/StorageSettings.java
+++ b/packages/apps/Settings/src/com/android/settings/deviceinfo/StorageSettings.java
@@ -77,7 +77,7 @@ public class StorageSettings extends SettingsPreferenceFragment implements Index
     private StorageManager mStorageManager;
 
     private PreferenceCategory mInternalCategory;
-    private PreferenceCategory mExternalCategory;
+    // private PreferenceCategory mExternalCategory;
 
     private StorageSummaryPreference mInternalSummary;
     private static long sTotalInternalStorage;
@@ -109,7 +109,7 @@ public class StorageSettings extends SettingsPreferenceFragment implements Index
         addPreferencesFromResource(R.xml.device_info_storage);
 
         mInternalCategory = (PreferenceCategory) findPreference("storage_internal");
-        mExternalCategory = (PreferenceCategory) findPreference("storage_external");
+        // mExternalCategory = (PreferenceCategory) findPreference("storage_external");
 
         mInternalSummary = new StorageSummaryPreference(getPrefContext());
 
@@ -146,7 +146,7 @@ public class StorageSettings extends SettingsPreferenceFragment implements Index
 
         getPreferenceScreen().removeAll();
         mInternalCategory.removeAll();
-        mExternalCategory.removeAll();
+        // mExternalCategory.removeAll();
 
         mInternalCategory.addPreference(mInternalSummary);
 
@@ -172,8 +172,8 @@ public class StorageSettings extends SettingsPreferenceFragment implements Index
                 }
             } else if (vol.getType() == VolumeInfo.TYPE_PUBLIC
                     || vol.getType() == VolumeInfo.TYPE_STUB) {
-                mExternalCategory.addPreference(
-                        new StorageVolumePreference(context, vol, 0));
+                // mExternalCategory.addPreference(
+                //         new StorageVolumePreference(context, vol, 0));
             }
         }
 
@@ -201,7 +201,7 @@ public class StorageSettings extends SettingsPreferenceFragment implements Index
                 pref.setTitle(disk.getDescription());
                 pref.setSummary(com.android.internal.R.string.ext_media_status_unsupported);
                 pref.setIcon(R.drawable.ic_sim_sd);
-                mExternalCategory.addPreference(pref);
+                // mExternalCategory.addPreference(pref);
             }
         }
 
@@ -213,12 +213,12 @@ public class StorageSettings extends SettingsPreferenceFragment implements Index
         if (mInternalCategory.getPreferenceCount() > 0) {
             getPreferenceScreen().addPreference(mInternalCategory);
         }
-        if (mExternalCategory.getPreferenceCount() > 0) {
-            getPreferenceScreen().addPreference(mExternalCategory);
-        }
+        // if (mExternalCategory.getPreferenceCount() > 0) {
+        //     // getPreferenceScreen().addPreference(mExternalCategory);
+        // }
 
         if (mInternalCategory.getPreferenceCount() == 2
-                && mExternalCategory.getPreferenceCount() == 0) {
+                ) {
             // Only showing primary internal storage, so just shortcut
             if (!mHasLaunchedPrivateVolumeSettings) {
                 mHasLaunchedPrivateVolumeSettings = true;
