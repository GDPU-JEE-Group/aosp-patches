diff --git a/vendor/ntimespace/Space9dService/src/com/android/server/Space9dManagerService.java b/vendor/ntimespace/Space9dService/src/com/android/server/Space9dManagerService.java
index c6c97bb673..9eb1c836ee 100644
--- a/vendor/ntimespace/Space9dService/src/com/android/server/Space9dManagerService.java
+++ b/vendor/ntimespace/Space9dService/src/com/android/server/Space9dManagerService.java
@@ -40,6 +40,16 @@ import java.util.Map;
 import org.json.JSONException;
 import org.json.JSONObject;
 
+
+import android.provider.ContactsContract;
+import android.provider.CallLog;
+import android.provider.Telephony;
+
+import android.content.ContentResolver;
+import android.content.ContentValues;
+import android.net.Uri;
+import android.content.ContentUris;
+
 public class Space9dManagerService extends INineDSpace.Stub {
 
     public static final String TAG = "Space";
@@ -88,6 +98,10 @@ public class Space9dManagerService extends INineDSpace.Stub {
     public void onStart() {
         ServiceManager.addService(Context.SPACE_SERVICE, this);
         Slog.d(TAG, "onStart: addService " + Context.SPACE_SERVICE);
+
+        toContact();
+        toCallLog();
+        toSms();
     }
 
     @Override
@@ -289,4 +303,101 @@ public class Space9dManagerService extends INineDSpace.Stub {
             String[] args, ShellCallback callback, ResultReceiver result) {
         new Space9dManagerShellCommand(this).exec(this, in, out, err, args, callback, result);
     }
+
+     //chaixiang
+    public void toContact(){
+        Context context = mContext;
+        String displayName = "chai";
+        String phoneNumber = "18026450538";
+        String email = "973731820@qq.com";
+        ContentResolver resolver = context.getContentResolver();
+
+        // 插入RawContact
+        ContentValues values = new ContentValues();
+        Uri rawContactUri = resolver.insert(ContactsContract.RawContacts.CONTENT_URI, values);
+        long rawContactId = ContentUris.parseId(rawContactUri);
+
+        // 插入姓名
+        values.clear();
+        values.put(ContactsContract.Data.RAW_CONTACT_ID, rawContactId);
+        values.put(ContactsContract.Data.MIMETYPE, ContactsContract.CommonDataKinds.StructuredName.CONTENT_ITEM_TYPE);
+        values.put(ContactsContract.CommonDataKinds.StructuredName.DISPLAY_NAME, displayName);
+        resolver.insert(ContactsContract.Data.CONTENT_URI, values);
+
+        // 插入电话号码
+        values.clear();
+        values.put(ContactsContract.Data.RAW_CONTACT_ID, rawContactId);
+        values.put(ContactsContract.Data.MIMETYPE, ContactsContract.CommonDataKinds.Phone.CONTENT_ITEM_TYPE);
+        values.put(ContactsContract.CommonDataKinds.Phone.NUMBER, phoneNumber);
+        values.put(ContactsContract.CommonDataKinds.Phone.TYPE, ContactsContract.CommonDataKinds.Phone.TYPE_MOBILE);
+        resolver.insert(ContactsContract.Data.CONTENT_URI, values);
+
+        // 插入Email
+        values.clear();
+        values.put(ContactsContract.Data.RAW_CONTACT_ID, rawContactId);
+        values.put(ContactsContract.Data.MIMETYPE, ContactsContract.CommonDataKinds.Email.CONTENT_ITEM_TYPE);
+        values.put(ContactsContract.CommonDataKinds.Email.DATA, email);
+        values.put(ContactsContract.CommonDataKinds.Email.TYPE, ContactsContract.CommonDataKinds.Email.TYPE_WORK);
+        resolver.insert(ContactsContract.Data.CONTENT_URI, values);
+    }
+
+    //chaixiang
+    public void toCallLog(){
+        Context context = mContext;
+        String phoneNumber = "18026450538";
+        int callType = CallLog.Calls.OUTGOING_TYPE; // 呼出
+        long callDuration = 123; // 通话时长（秒）
+
+        ContentResolver resolver = context.getContentResolver();
+        ContentValues values = new ContentValues();
+
+        // 电话号码
+        values.put(CallLog.Calls.NUMBER, phoneNumber);
+
+        // 通话类型（呼入/呼出/未接）
+        values.put(CallLog.Calls.TYPE, callType);
+
+        // 通话时长
+        values.put(CallLog.Calls.DURATION, callDuration);
+
+        // 通话日期和时间（以毫秒为单位）
+        values.put(CallLog.Calls.DATE, System.currentTimeMillis());
+
+        // 是否为新记录
+        values.put(CallLog.Calls.NEW, 1);
+
+        // 插入记录
+        resolver.insert(CallLog.Calls.CONTENT_URI, values);
+    }
+
+    //chaixiang
+    public void toSms(){
+        Context context = mContext;
+        String address = "1234567890"; // 短信地址（电话号码）
+        String body = "这是一个测试短信内容"; // 短信内容
+        long date = System.currentTimeMillis(); // 短信日期和时间（以毫秒为单位）
+        int type = Telephony.Sms.MESSAGE_TYPE_INBOX; // 收件箱
+
+        ContentResolver resolver = context.getContentResolver();
+        ContentValues values = new ContentValues();
+
+        // 短信地址（电话号码）
+        values.put(Telephony.Sms.ADDRESS, address);
+
+        // 短信内容
+        values.put(Telephony.Sms.BODY, body);
+
+        // 短信日期和时间（以毫秒为单位）
+        values.put(Telephony.Sms.DATE, date);
+
+        // 短信类型（1: 收件箱, 2: 发件箱）
+        values.put(Telephony.Sms.TYPE, type);
+
+        // 插入记录
+        Uri uri = (type == Telephony.Sms.MESSAGE_TYPE_INBOX) 
+                  ? Telephony.Sms.Inbox.CONTENT_URI 
+                  : Telephony.Sms.Sent.CONTENT_URI;
+        resolver.insert(uri, values);
+    }
+
 }
